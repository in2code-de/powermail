##################
# All settings for mail to receiver
##################
plugin.tx_powermail.settings.setup {
  receiver {
    enable = {$plugin.tx_powermail.settings.receiver.enable}

    # Following settings are normally set via Flexform
    email =
    subject =
    body =

    # add file attachments from upload fields
    attachment = {$plugin.tx_powermail.settings.receiver.attachment}

    # html, plain, both
    mailformat = {$plugin.tx_powermail.settings.receiver.mailformat}

    default {
      senderName = TEXT
      senderName.value = {$plugin.tx_powermail.settings.receiver.default.senderName}

      senderEmail = TEXT
      senderEmail.value = {$plugin.tx_powermail.settings.receiver.default.senderEmail}
    }

    # EXAMPLE: Predefine some receivers - selection in backend could be done via page TSConfig:
    #    tx_powermail.flexForm.predefinedReceivers.addFieldOptions.receivers1 = receiver list #1
    #      or with a locallang variable:
    #    tx_powermail.flexForm.predefinedReceivers.addFieldOptions.receivers1 = LLL:fileadmin/locallang.xlf:key
    predefinedReceiver {
      # EXAMPLE: for hard coded receivers
      # receivers1 {
      #   email = TEXT
      #   email.value = email1@domain.org, email2@domain.org
      # }

      # EXAMPLE: for dynamic receiver - depending on value in field {receiver}
      # receivers2 {
      #   email = CASE
      #   email {
      #     key.data = GP:tx_powermail_pi1|field|receiver

      #     1 = TEXT
      #     1.value = email1@domain.org

      #     2 = TEXT
      #     2.value = email2@domain.org
      #   }
      # }
    }

    # Normally you do not need to overwrite a flexform setting, but this allows you to use cObject functions
    overwrite {
      email = TEXT
      email.value = {$plugin.tx_powermail.settings.receiver.overwrite.email}

      name = TEXT
      name.value = {$plugin.tx_powermail.settings.receiver.overwrite.name}

      senderName = TEXT
      senderName.value = {$plugin.tx_powermail.settings.receiver.overwrite.senderName}

      senderEmail = TEXT
      senderEmail.value = {$plugin.tx_powermail.settings.receiver.overwrite.senderEmail}

      subject = TEXT
      subject.value = {$plugin.tx_powermail.settings.receiver.overwrite.subject}

      # Add further CC Receivers (split them via comma)
      cc = TEXT
      cc.value = {$plugin.tx_powermail.settings.receiver.overwrite.cc}

      # Add further BCC Receivers (split them via comma)
      bcc = TEXT
      bcc.value = {$plugin.tx_powermail.settings.receiver.overwrite.bcc}

      # Add return path
      returnPath = TEXT
      returnPath.value = {$plugin.tx_powermail.settings.receiver.overwrite.returnPath}

      # Reply address (both required)
      replyToEmail = TEXT
      replyToEmail.value = {$plugin.tx_powermail.settings.receiver.overwrite.replyToEmail}
      replyToName = TEXT
      replyToName.value = {$plugin.tx_powermail.settings.receiver.overwrite.replyToName}

      # Set mail priority from 1 to 5
      priority = {$plugin.tx_powermail.settings.receiver.overwrite.priority}
    }

    # EXAMPLE: Add additional attachments to the mail (separate each with comma)
    # addAttachment = TEXT
    # addAttachment.value = fileadmin/file.jpg
    # addAttachment.wrap = |,

    # Mail Header "Sender:" see RFC 2822 - 3.6.2 Originator fields f.e. webserver@example.com, leave empty if you do not want to set a Sender-Header
    senderHeader {
      email = TEXT
      email.value = {$plugin.tx_powermail.settings.receiver.senderHeader.email}
      # optional: f.e. Webserver
      name = TEXT
      name.value = {$plugin.tx_powermail.settings.receiver.senderHeader.name}
    }
  }
}
