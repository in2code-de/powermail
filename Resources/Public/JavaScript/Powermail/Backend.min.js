import $$1 from 'jquery';
import Modal from '@typo3/backend/modal.js';

window.$ = window.jQuery = $$1;

!function (t, e) {
  function i(e, i) {
    var o,
      n,
      r,
      h = e.nodeName.toLowerCase();
    return "area" === h ? (o = e.parentNode, n = o.name, !(!e.href || !n || "map" !== o.nodeName.toLowerCase()) && (r = t("img[usemap=#" + n + "]")[0], !!r && s(r))) : (/input|select|textarea|button|object/.test(h) ? !e.disabled : "a" === h ? e.href || i : i) && s(e);
  }
  function s(e) {
    return t.expr.filters.visible(e) && !t(e).parents().addBack().filter(function () {
      return "hidden" === t.css(this, "visibility");
    }).length;
  }
  var o = 0,
    n = /^ui-id-\d+$/;
  t.ui = t.ui || {}, t.extend(t.ui, {
    version: "1.10.4",
    keyCode: {
      BACKSPACE: 8,
      COMMA: 188,
      DELETE: 46,
      DOWN: 40,
      END: 35,
      ENTER: 13,
      ESCAPE: 27,
      HOME: 36,
      LEFT: 37,
      NUMPAD_ADD: 107,
      NUMPAD_DECIMAL: 110,
      NUMPAD_DIVIDE: 111,
      NUMPAD_ENTER: 108,
      NUMPAD_MULTIPLY: 106,
      NUMPAD_SUBTRACT: 109,
      PAGE_DOWN: 34,
      PAGE_UP: 33,
      PERIOD: 190,
      RIGHT: 39,
      SPACE: 32,
      TAB: 9,
      UP: 38
    }
  }), t.fn.extend({
    focus: function (e) {
      return function (i, s) {
        return "number" == typeof i ? this.each(function () {
          var e = this;
          setTimeout(function () {
            t(e).focus(), s && s.call(e);
          }, i);
        }) : e.apply(this, arguments);
      };
    }(t.fn.focus),
    scrollParent: function scrollParent() {
      var e;
      return e = t.ui.ie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function () {
        return /(relative|absolute|fixed)/.test(t.css(this, "position")) && /(auto|scroll)/.test(t.css(this, "overflow") + t.css(this, "overflow-y") + t.css(this, "overflow-x"));
      }).eq(0) : this.parents().filter(function () {
        return /(auto|scroll)/.test(t.css(this, "overflow") + t.css(this, "overflow-y") + t.css(this, "overflow-x"));
      }).eq(0), /fixed/.test(this.css("position")) || !e.length ? t(document) : e;
    },
    zIndex: function zIndex(i) {
      if (i !== e) return this.css("zIndex", i);
      if (this.length) for (var s, o, n = t(this[0]); n.length && n[0] !== document;) {
        if (s = n.css("position"), ("absolute" === s || "relative" === s || "fixed" === s) && (o = parseInt(n.css("zIndex"), 10), !isNaN(o) && 0 !== o)) return o;
        n = n.parent();
      }
      return 0;
    },
    uniqueId: function uniqueId() {
      return this.each(function () {
        this.id || (this.id = "ui-id-" + ++o);
      });
    },
    removeUniqueId: function removeUniqueId() {
      return this.each(function () {
        n.test(this.id) && t(this).removeAttr("id");
      });
    }
  }), t.extend(t.expr[":"], {
    data: t.expr.createPseudo ? t.expr.createPseudo(function (e) {
      return function (i) {
        return !!t.data(i, e);
      };
    }) : function (e, i, s) {
      return !!t.data(e, s[3]);
    },
    focusable: function focusable(e) {
      return i(e, !isNaN(t.attr(e, "tabindex")));
    },
    tabbable: function tabbable(e) {
      var s = t.attr(e, "tabindex"),
        o = isNaN(s);
      return (o || s >= 0) && i(e, !o);
    }
  }), t("<a>").outerWidth(1).jquery || t.each(["Width", "Height"], function (i, s) {
    function o(e, i, s, o) {
      return t.each(n, function () {
        i -= parseFloat(t.css(e, "padding" + this)) || 0, s && (i -= parseFloat(t.css(e, "border" + this + "Width")) || 0), o && (i -= parseFloat(t.css(e, "margin" + this)) || 0);
      }), i;
    }
    var n = "Width" === s ? ["Left", "Right"] : ["Top", "Bottom"],
      r = s.toLowerCase(),
      h = {
        innerWidth: t.fn.innerWidth,
        innerHeight: t.fn.innerHeight,
        outerWidth: t.fn.outerWidth,
        outerHeight: t.fn.outerHeight
      };
    t.fn["inner" + s] = function (i) {
      return i === e ? h["inner" + s].call(this) : this.each(function () {
        t(this).css(r, o(this, i) + "px");
      });
    }, t.fn["outer" + s] = function (e, i) {
      return "number" != typeof e ? h["outer" + s].call(this, e) : this.each(function () {
        t(this).css(r, o(this, e, !0, i) + "px");
      });
    };
  }), t.fn.addBack || (t.fn.addBack = function (t) {
    return this.add(null == t ? this.prevObject : this.prevObject.filter(t));
  }), t("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (t.fn.removeData = function (e) {
    return function (i) {
      return arguments.length ? e.call(this, t.camelCase(i)) : e.call(this);
    };
  }(t.fn.removeData)), t.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()), t.support.selectstart = "onselectstart" in document.createElement("div"), t.fn.extend({
    disableSelection: function disableSelection() {
      return this.bind((t.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function (t) {
        t.preventDefault();
      });
    },
    enableSelection: function enableSelection() {
      return this.unbind(".ui-disableSelection");
    }
  }), t.extend(t.ui, {
    plugin: {
      add: function add(e, i, s) {
        var o,
          n = t.ui[e].prototype;
        for (o in s) n.plugins[o] = n.plugins[o] || [], n.plugins[o].push([i, s[o]]);
      },
      call: function call(t, e, i) {
        var s,
          o = t.plugins[e];
        if (o && t.element[0].parentNode && 11 !== t.element[0].parentNode.nodeType) for (s = 0; s < o.length; s++) t.options[o[s][0]] && o[s][1].apply(t.element, i);
      }
    },
    hasScroll: function hasScroll(e, i) {
      if ("hidden" === t(e).css("overflow")) return !1;
      var s = i && "left" === i ? "scrollLeft" : "scrollTop",
        o = !1;
      return e[s] > 0 || (e[s] = 1, o = e[s] > 0, e[s] = 0, o);
    }
  });
}(jQuery), function (t, e) {
  var i = 0,
    s = Array.prototype.slice,
    o = t.cleanData;
  t.cleanData = function (e) {
    for (var i, s = 0; null != (i = e[s]); s++) try {
      t(i).triggerHandler("remove");
    } catch (n) {}
    o(e);
  }, t.widget = function (e, i, s) {
    var o,
      n,
      r,
      h,
      a = {},
      l = e.split(".")[0];
    e = e.split(".")[1], o = l + "-" + e, s || (s = i, i = t.Widget), t.expr[":"][o.toLowerCase()] = function (e) {
      return !!t.data(e, o);
    }, t[l] = t[l] || {}, n = t[l][e], r = t[l][e] = function (t, e) {
      return this._createWidget ? void (arguments.length && this._createWidget(t, e)) : new r(t, e);
    }, t.extend(r, n, {
      version: s.version,
      _proto: t.extend({}, s),
      _childConstructors: []
    }), h = new i(), h.options = t.widget.extend({}, h.options), t.each(s, function (e, s) {
      return t.isFunction(s) ? void (a[e] = function () {
        var t = function t() {
            return i.prototype[e].apply(this, arguments);
          },
          o = function o(t) {
            return i.prototype[e].apply(this, t);
          };
        return function () {
          var e,
            i = this._super,
            n = this._superApply;
          return this._super = t, this._superApply = o, e = s.apply(this, arguments), this._super = i, this._superApply = n, e;
        };
      }()) : void (a[e] = s);
    }), r.prototype = t.widget.extend(h, {
      widgetEventPrefix: n ? h.widgetEventPrefix || e : e
    }, a, {
      constructor: r,
      namespace: l,
      widgetName: e,
      widgetFullName: o
    }), n ? (t.each(n._childConstructors, function (e, i) {
      var s = i.prototype;
      t.widget(s.namespace + "." + s.widgetName, r, i._proto);
    }), delete n._childConstructors) : i._childConstructors.push(r), t.widget.bridge(e, r);
  }, t.widget.extend = function (i) {
    for (var o, n, r = s.call(arguments, 1), h = 0, a = r.length; h < a; h++) for (o in r[h]) n = r[h][o], r[h].hasOwnProperty(o) && n !== e && (t.isPlainObject(n) ? i[o] = t.isPlainObject(i[o]) ? t.widget.extend({}, i[o], n) : t.widget.extend({}, n) : i[o] = n);
    return i;
  }, t.widget.bridge = function (i, o) {
    var n = o.prototype.widgetFullName || i;
    t.fn[i] = function (r) {
      var h = "string" == typeof r,
        a = s.call(arguments, 1),
        l = this;
      return r = !h && a.length ? t.widget.extend.apply(null, [r].concat(a)) : r, h ? this.each(function () {
        var s,
          o = t.data(this, n);
        return o ? t.isFunction(o[r]) && "_" !== r.charAt(0) ? (s = o[r].apply(o, a), s !== o && s !== e ? (l = s && s.jquery ? l.pushStack(s.get()) : s, !1) : void 0) : t.error("no such method '" + r + "' for " + i + " widget instance") : t.error("cannot call methods on " + i + " prior to initialization; attempted to call method '" + r + "'");
      }) : this.each(function () {
        var e = t.data(this, n);
        e ? e.option(r || {})._init() : t.data(this, n, new o(r, this));
      }), l;
    };
  }, t.Widget = function () {}, t.Widget._childConstructors = [], t.Widget.prototype = {
    widgetName: "widget",
    widgetEventPrefix: "",
    defaultElement: "<div>",
    options: {
      disabled: !1,
      create: null
    },
    _createWidget: function _createWidget(e, s) {
      s = t(s || this.defaultElement || this)[0], this.element = t(s), this.uuid = i++, this.eventNamespace = "." + this.widgetName + this.uuid, this.options = t.widget.extend({}, this.options, this._getCreateOptions(), e), this.bindings = t(), this.hoverable = t(), this.focusable = t(), s !== this && (t.data(s, this.widgetFullName, this), this._on(!0, this.element, {
        remove: function remove(t) {
          t.target === s && this.destroy();
        }
      }), this.document = t(s.style ? s.ownerDocument : s.document || s), this.window = t(this.document[0].defaultView || this.document[0].parentWindow)), this._create(), this._trigger("create", null, this._getCreateEventData()), this._init();
    },
    _getCreateOptions: t.noop,
    _getCreateEventData: t.noop,
    _create: t.noop,
    _init: t.noop,
    destroy: function destroy() {
      this._destroy(), this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(t.camelCase(this.widgetFullName)), this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled"), this.bindings.unbind(this.eventNamespace), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus");
    },
    _destroy: t.noop,
    widget: function widget() {
      return this.element;
    },
    option: function option(i, s) {
      var o,
        n,
        r,
        h = i;
      if (0 === arguments.length) return t.widget.extend({}, this.options);
      if ("string" == typeof i) if (h = {}, o = i.split("."), i = o.shift(), o.length) {
        for (n = h[i] = t.widget.extend({}, this.options[i]), r = 0; r < o.length - 1; r++) n[o[r]] = n[o[r]] || {}, n = n[o[r]];
        if (i = o.pop(), 1 === arguments.length) return n[i] === e ? null : n[i];
        n[i] = s;
      } else {
        if (1 === arguments.length) return this.options[i] === e ? null : this.options[i];
        h[i] = s;
      }
      return this._setOptions(h), this;
    },
    _setOptions: function _setOptions(t) {
      var e;
      for (e in t) this._setOption(e, t[e]);
      return this;
    },
    _setOption: function _setOption(t, e) {
      return this.options[t] = e, "disabled" === t && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!e).attr("aria-disabled", e), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")), this;
    },
    enable: function enable() {
      return this._setOption("disabled", !1);
    },
    disable: function disable() {
      return this._setOption("disabled", !0);
    },
    _on: function _on(e, i, s) {
      var o,
        n = this;
      "boolean" != typeof e && (s = i, i = e, e = !1), s ? (i = o = t(i), this.bindings = this.bindings.add(i)) : (s = i, i = this.element, o = this.widget()), t.each(s, function (s, r) {
        function h() {
          if (e || n.options.disabled !== !0 && !t(this).hasClass("ui-state-disabled")) return ("string" == typeof r ? n[r] : r).apply(n, arguments);
        }
        "string" != typeof r && (h.guid = r.guid = r.guid || h.guid || t.guid++);
        var a = s.match(/^(\w+)\s*(.*)$/),
          l = a[1] + n.eventNamespace,
          c = a[2];
        c ? o.delegate(c, l, h) : i.bind(l, h);
      });
    },
    _off: function _off(t, e) {
      e = (e || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, t.unbind(e).undelegate(e);
    },
    _delay: function _delay(t, e) {
      function i() {
        return ("string" == typeof t ? s[t] : t).apply(s, arguments);
      }
      var s = this;
      return setTimeout(i, e || 0);
    },
    _hoverable: function _hoverable(e) {
      this.hoverable = this.hoverable.add(e), this._on(e, {
        mouseenter: function mouseenter(e) {
          t(e.currentTarget).addClass("ui-state-hover");
        },
        mouseleave: function mouseleave(e) {
          t(e.currentTarget).removeClass("ui-state-hover");
        }
      });
    },
    _focusable: function _focusable(e) {
      this.focusable = this.focusable.add(e), this._on(e, {
        focusin: function focusin(e) {
          t(e.currentTarget).addClass("ui-state-focus");
        },
        focusout: function focusout(e) {
          t(e.currentTarget).removeClass("ui-state-focus");
        }
      });
    },
    _trigger: function _trigger(e, i, s) {
      var o,
        n,
        r = this.options[e];
      if (s = s || {}, i = t.Event(i), i.type = (e === this.widgetEventPrefix ? e : this.widgetEventPrefix + e).toLowerCase(), i.target = this.element[0], n = i.originalEvent) for (o in n) o in i || (i[o] = n[o]);
      return this.element.trigger(i, s), !(t.isFunction(r) && r.apply(this.element[0], [i].concat(s)) === !1 || i.isDefaultPrevented());
    }
  }, t.each({
    show: "fadeIn",
    hide: "fadeOut"
  }, function (e, i) {
    t.Widget.prototype["_" + e] = function (s, o, n) {
      "string" == typeof o && (o = {
        effect: o
      });
      var r,
        h = o ? o === !0 || "number" == typeof o ? i : o.effect || i : e;
      o = o || {}, "number" == typeof o && (o = {
        duration: o
      }), r = !t.isEmptyObject(o), o.complete = n, o.delay && s.delay(o.delay), r && t.effects && t.effects.effect[h] ? s[e](o) : h !== e && s[h] ? s[h](o.duration, o.easing, n) : s.queue(function (i) {
        t(this)[e](), n && n.call(s[0]), i();
      });
    };
  });
}(jQuery), function (t, e) {
  var i = !1;
  t(document).mouseup(function () {
    i = !1;
  }), t.widget("ui.mouse", {
    version: "1.10.4",
    options: {
      cancel: "input,textarea,button,select,option",
      distance: 1,
      delay: 0
    },
    _mouseInit: function _mouseInit() {
      var e = this;
      this.element.bind("mousedown." + this.widgetName, function (t) {
        return e._mouseDown(t);
      }).bind("click." + this.widgetName, function (i) {
        if (!0 === t.data(i.target, e.widgetName + ".preventClickEvent")) return t.removeData(i.target, e.widgetName + ".preventClickEvent"), i.stopImmediatePropagation(), !1;
      }), this.started = !1;
    },
    _mouseDestroy: function _mouseDestroy() {
      this.element.unbind("." + this.widgetName), this._mouseMoveDelegate && t(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
    },
    _mouseDown: function _mouseDown(e) {
      if (!i) {
        this._mouseStarted && this._mouseUp(e), this._mouseDownEvent = e;
        var s = this,
          o = 1 === e.which,
          n = !("string" != typeof this.options.cancel || !e.target.nodeName) && t(e.target).closest(this.options.cancel).length;
        return !(o && !n && this._mouseCapture(e)) || (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function () {
          s.mouseDelayMet = !0;
        }, this.options.delay)), this._mouseDistanceMet(e) && this._mouseDelayMet(e) && (this._mouseStarted = this._mouseStart(e) !== !1, !this._mouseStarted) ? (e.preventDefault(), !0) : (!0 === t.data(e.target, this.widgetName + ".preventClickEvent") && t.removeData(e.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function (t) {
          return s._mouseMove(t);
        }, this._mouseUpDelegate = function (t) {
          return s._mouseUp(t);
        }, t(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), e.preventDefault(), i = !0, !0));
      }
    },
    _mouseMove: function _mouseMove(e) {
      return t.ui.ie && (!document.documentMode || document.documentMode < 9) && !e.button ? this._mouseUp(e) : this._mouseStarted ? (this._mouseDrag(e), e.preventDefault()) : (this._mouseDistanceMet(e) && this._mouseDelayMet(e) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, e) !== !1, this._mouseStarted ? this._mouseDrag(e) : this._mouseUp(e)), !this._mouseStarted);
    },
    _mouseUp: function _mouseUp(e) {
      return t(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, e.target === this._mouseDownEvent.target && t.data(e.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(e)), !1;
    },
    _mouseDistanceMet: function _mouseDistanceMet(t) {
      return Math.max(Math.abs(this._mouseDownEvent.pageX - t.pageX), Math.abs(this._mouseDownEvent.pageY - t.pageY)) >= this.options.distance;
    },
    _mouseDelayMet: function _mouseDelayMet() {
      return this.mouseDelayMet;
    },
    _mouseStart: function _mouseStart() {},
    _mouseDrag: function _mouseDrag() {},
    _mouseStop: function _mouseStop() {},
    _mouseCapture: function _mouseCapture() {
      return !0;
    }
  });
}(jQuery), function (t, e) {
  function i(t, e, i) {
    return [parseFloat(t[0]) * (p.test(t[0]) ? e / 100 : 1), parseFloat(t[1]) * (p.test(t[1]) ? i / 100 : 1)];
  }
  function s(e, i) {
    return parseInt(t.css(e, i), 10) || 0;
  }
  function o(e) {
    var i = e[0];
    return 9 === i.nodeType ? {
      width: e.width(),
      height: e.height(),
      offset: {
        top: 0,
        left: 0
      }
    } : t.isWindow(i) ? {
      width: e.width(),
      height: e.height(),
      offset: {
        top: e.scrollTop(),
        left: e.scrollLeft()
      }
    } : i.preventDefault ? {
      width: 0,
      height: 0,
      offset: {
        top: i.pageY,
        left: i.pageX
      }
    } : {
      width: e.outerWidth(),
      height: e.outerHeight(),
      offset: e.offset()
    };
  }
  t.ui = t.ui || {};
  var n,
    r = Math.max,
    h = Math.abs,
    a = Math.round,
    l = /left|center|right/,
    c = /top|center|bottom/,
    u = /[\+\-]\d+(\.[\d]+)?%?/,
    f = /^\w+/,
    p = /%$/,
    d = t.fn.position;
  t.position = {
    scrollbarWidth: function scrollbarWidth() {
      if (n !== e) return n;
      var i,
        s,
        o = t("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
        r = o.children()[0];
      return t("body").append(o), i = r.offsetWidth, o.css("overflow", "scroll"), s = r.offsetWidth, i === s && (s = o[0].clientWidth), o.remove(), n = i - s;
    },
    getScrollInfo: function getScrollInfo(e) {
      var i = e.isWindow || e.isDocument ? "" : e.element.css("overflow-x"),
        s = e.isWindow || e.isDocument ? "" : e.element.css("overflow-y"),
        o = "scroll" === i || "auto" === i && e.width < e.element[0].scrollWidth,
        n = "scroll" === s || "auto" === s && e.height < e.element[0].scrollHeight;
      return {
        width: n ? t.position.scrollbarWidth() : 0,
        height: o ? t.position.scrollbarWidth() : 0
      };
    },
    getWithinInfo: function getWithinInfo(e) {
      var i = t(e || window),
        s = t.isWindow(i[0]),
        o = !!i[0] && 9 === i[0].nodeType;
      return {
        element: i,
        isWindow: s,
        isDocument: o,
        offset: i.offset() || {
          left: 0,
          top: 0
        },
        scrollLeft: i.scrollLeft(),
        scrollTop: i.scrollTop(),
        width: s ? i.width() : i.outerWidth(),
        height: s ? i.height() : i.outerHeight()
      };
    }
  }, t.fn.position = function (e) {
    if (!e || !e.of) return d.apply(this, arguments);
    e = t.extend({}, e);
    var n,
      p,
      m,
      g,
      v,
      _,
      w = t(e.of),
      b = t.position.getWithinInfo(e.within),
      y = t.position.getScrollInfo(b),
      P = (e.collision || "flip").split(" "),
      I = {};
    return _ = o(w), w[0].preventDefault && (e.at = "left top"), p = _.width, m = _.height, g = _.offset, v = t.extend({}, g), t.each(["my", "at"], function () {
      var t,
        i,
        s = (e[this] || "").split(" ");
      1 === s.length && (s = l.test(s[0]) ? s.concat(["center"]) : c.test(s[0]) ? ["center"].concat(s) : ["center", "center"]), s[0] = l.test(s[0]) ? s[0] : "center", s[1] = c.test(s[1]) ? s[1] : "center", t = u.exec(s[0]), i = u.exec(s[1]), I[this] = [t ? t[0] : 0, i ? i[0] : 0], e[this] = [f.exec(s[0])[0], f.exec(s[1])[0]];
    }), 1 === P.length && (P[1] = P[0]), "right" === e.at[0] ? v.left += p : "center" === e.at[0] && (v.left += p / 2), "bottom" === e.at[1] ? v.top += m : "center" === e.at[1] && (v.top += m / 2), n = i(I.at, p, m), v.left += n[0], v.top += n[1], this.each(function () {
      var o,
        l,
        c = t(this),
        u = c.outerWidth(),
        f = c.outerHeight(),
        d = s(this, "marginLeft"),
        _ = s(this, "marginTop"),
        C = u + d + s(this, "marginRight") + y.width,
        x = f + _ + s(this, "marginBottom") + y.height,
        D = t.extend({}, v),
        W = i(I.my, c.outerWidth(), c.outerHeight());
      "right" === e.my[0] ? D.left -= u : "center" === e.my[0] && (D.left -= u / 2), "bottom" === e.my[1] ? D.top -= f : "center" === e.my[1] && (D.top -= f / 2), D.left += W[0], D.top += W[1], t.support.offsetFractions || (D.left = a(D.left), D.top = a(D.top)), o = {
        marginLeft: d,
        marginTop: _
      }, t.each(["left", "top"], function (i, s) {
        t.ui.position[P[i]] && t.ui.position[P[i]][s](D, {
          targetWidth: p,
          targetHeight: m,
          elemWidth: u,
          elemHeight: f,
          collisionPosition: o,
          collisionWidth: C,
          collisionHeight: x,
          offset: [n[0] + W[0], n[1] + W[1]],
          my: e.my,
          at: e.at,
          within: b,
          elem: c
        });
      }), e.using && (l = function l(t) {
        var i = g.left - D.left,
          s = i + p - u,
          o = g.top - D.top,
          n = o + m - f,
          a = {
            target: {
              element: w,
              left: g.left,
              top: g.top,
              width: p,
              height: m
            },
            element: {
              element: c,
              left: D.left,
              top: D.top,
              width: u,
              height: f
            },
            horizontal: s < 0 ? "left" : i > 0 ? "right" : "center",
            vertical: n < 0 ? "top" : o > 0 ? "bottom" : "middle"
          };
        p < u && h(i + s) < p && (a.horizontal = "center"), m < f && h(o + n) < m && (a.vertical = "middle"), r(h(i), h(s)) > r(h(o), h(n)) ? a.important = "horizontal" : a.important = "vertical", e.using.call(this, t, a);
      }), c.offset(t.extend(D, {
        using: l
      }));
    });
  }, t.ui.position = {
    fit: {
      left: function left(t, e) {
        var i,
          s = e.within,
          o = s.isWindow ? s.scrollLeft : s.offset.left,
          n = s.width,
          h = t.left - e.collisionPosition.marginLeft,
          a = o - h,
          l = h + e.collisionWidth - n - o;
        e.collisionWidth > n ? a > 0 && l <= 0 ? (i = t.left + a + e.collisionWidth - n - o, t.left += a - i) : l > 0 && a <= 0 ? t.left = o : a > l ? t.left = o + n - e.collisionWidth : t.left = o : a > 0 ? t.left += a : l > 0 ? t.left -= l : t.left = r(t.left - h, t.left);
      },
      top: function top(t, e) {
        var i,
          s = e.within,
          o = s.isWindow ? s.scrollTop : s.offset.top,
          n = e.within.height,
          h = t.top - e.collisionPosition.marginTop,
          a = o - h,
          l = h + e.collisionHeight - n - o;
        e.collisionHeight > n ? a > 0 && l <= 0 ? (i = t.top + a + e.collisionHeight - n - o, t.top += a - i) : l > 0 && a <= 0 ? t.top = o : a > l ? t.top = o + n - e.collisionHeight : t.top = o : a > 0 ? t.top += a : l > 0 ? t.top -= l : t.top = r(t.top - h, t.top);
      }
    },
    flip: {
      left: function left(t, e) {
        var i,
          s,
          o = e.within,
          n = o.offset.left + o.scrollLeft,
          r = o.width,
          a = o.isWindow ? o.scrollLeft : o.offset.left,
          l = t.left - e.collisionPosition.marginLeft,
          c = l - a,
          u = l + e.collisionWidth - r - a,
          f = "left" === e.my[0] ? -e.elemWidth : "right" === e.my[0] ? e.elemWidth : 0,
          p = "left" === e.at[0] ? e.targetWidth : "right" === e.at[0] ? -e.targetWidth : 0,
          d = -2 * e.offset[0];
        c < 0 ? (i = t.left + f + p + d + e.collisionWidth - r - n, (i < 0 || i < h(c)) && (t.left += f + p + d)) : u > 0 && (s = t.left - e.collisionPosition.marginLeft + f + p + d - a, (s > 0 || h(s) < u) && (t.left += f + p + d));
      },
      top: function top(t, e) {
        var i,
          s,
          o = e.within,
          n = o.offset.top + o.scrollTop,
          r = o.height,
          a = o.isWindow ? o.scrollTop : o.offset.top,
          l = t.top - e.collisionPosition.marginTop,
          c = l - a,
          u = l + e.collisionHeight - r - a,
          f = "top" === e.my[1],
          p = f ? -e.elemHeight : "bottom" === e.my[1] ? e.elemHeight : 0,
          d = "top" === e.at[1] ? e.targetHeight : "bottom" === e.at[1] ? -e.targetHeight : 0,
          m = -2 * e.offset[1];
        c < 0 ? (s = t.top + p + d + m + e.collisionHeight - r - n, t.top + p + d + m > c && (s < 0 || s < h(c)) && (t.top += p + d + m)) : u > 0 && (i = t.top - e.collisionPosition.marginTop + p + d + m - a, t.top + p + d + m > u && (i > 0 || h(i) < u) && (t.top += p + d + m));
      }
    },
    flipfit: {
      left: function left() {
        t.ui.position.flip.left.apply(this, arguments), t.ui.position.fit.left.apply(this, arguments);
      },
      top: function top() {
        t.ui.position.flip.top.apply(this, arguments), t.ui.position.fit.top.apply(this, arguments);
      }
    }
  }, function () {
    var e,
      i,
      s,
      o,
      n,
      r = document.getElementsByTagName("body")[0],
      h = document.createElement("div");
    e = document.createElement(r ? "div" : "body"), s = {
      visibility: "hidden",
      width: 0,
      height: 0,
      border: 0,
      margin: 0,
      background: "none"
    }, r && t.extend(s, {
      position: "absolute",
      left: "-1000px",
      top: "-1000px"
    });
    for (n in s) e.style[n] = s[n];
    e.appendChild(h), i = r || document.documentElement, i.insertBefore(e, i.firstChild), h.style.cssText = "position: absolute; left: 10.7432222px;", o = t(h).offset().left, t.support.offsetFractions = o > 10 && o < 11, e.innerHTML = "", i.removeChild(e);
  }();
}(jQuery), function (t, e) {
  function i(t, e, i) {
    return t > e && t < e + i;
  }
  function s(t) {
    return /left|right/.test(t.css("float")) || /inline|table-cell/.test(t.css("display"));
  }
  t.widget("ui.sortable", t.ui.mouse, {
    version: "1.10.4",
    widgetEventPrefix: "sort",
    ready: !1,
    options: {
      appendTo: "parent",
      axis: !1,
      connectWith: !1,
      containment: !1,
      cursor: "auto",
      cursorAt: !1,
      dropOnEmpty: !0,
      forcePlaceholderSize: !1,
      forceHelperSize: !1,
      grid: !1,
      handle: !1,
      helper: "original",
      items: "> *",
      opacity: !1,
      placeholder: !1,
      revert: !1,
      scroll: !0,
      scrollSensitivity: 20,
      scrollSpeed: 20,
      scope: "default",
      tolerance: "intersect",
      zIndex: 1e3,
      activate: null,
      beforeStop: null,
      change: null,
      deactivate: null,
      out: null,
      over: null,
      receive: null,
      remove: null,
      sort: null,
      start: null,
      stop: null,
      update: null
    },
    _create: function _create() {
      var t = this.options;
      this.containerCache = {}, this.element.addClass("ui-sortable"), this.refresh(), this.floating = !!this.items.length && ("x" === t.axis || s(this.items[0].item)), this.offset = this.element.offset(), this._mouseInit(), this.ready = !0;
    },
    _destroy: function _destroy() {
      this.element.removeClass("ui-sortable ui-sortable-disabled"), this._mouseDestroy();
      for (var t = this.items.length - 1; t >= 0; t--) this.items[t].item.removeData(this.widgetName + "-item");
      return this;
    },
    _setOption: function _setOption(e, i) {
      "disabled" === e ? (this.options[e] = i, this.widget().toggleClass("ui-sortable-disabled", !!i)) : t.Widget.prototype._setOption.apply(this, arguments);
    },
    _mouseCapture: function _mouseCapture(e, i) {
      var s = null,
        o = !1,
        n = this;
      return !this.reverting && !this.options.disabled && "static" !== this.options.type && (this._refreshItems(e), t(e.target).parents().each(function () {
        if (t.data(this, n.widgetName + "-item") === n) return s = t(this), !1;
      }), t.data(e.target, n.widgetName + "-item") === n && (s = t(e.target)), !!s && !(this.options.handle && !i && (t(this.options.handle, s).find("*").addBack().each(function () {
        this === e.target && (o = !0);
      }), !o)) && (this.currentItem = s, this._removeCurrentsFromItems(), !0));
    },
    _mouseStart: function _mouseStart(e, i, s) {
      var o,
        n,
        r = this.options;
      if (this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(e), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = {
        top: this.offset.top - this.margins.top,
        left: this.offset.left - this.margins.left
      }, t.extend(this.offset, {
        click: {
          left: e.pageX - this.offset.left,
          top: e.pageY - this.offset.top
        },
        parent: this._getParentOffset(),
        relative: this._getRelativeOffset()
      }), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), this.originalPosition = this._generatePosition(e), this.originalPageX = e.pageX, this.originalPageY = e.pageY, r.cursorAt && this._adjustOffsetFromHelper(r.cursorAt), this.domPosition = {
        prev: this.currentItem.prev()[0],
        parent: this.currentItem.parent()[0]
      }, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), r.containment && this._setContainment(), r.cursor && "auto" !== r.cursor && (n = this.document.find("body"), this.storedCursor = n.css("cursor"), n.css("cursor", r.cursor), this.storedStylesheet = t("<style>*{ cursor: " + r.cursor + " !important; }</style>").appendTo(n)), r.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", r.opacity)), r.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", r.zIndex)), this.scrollParent[0] !== document && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", e, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !s) for (o = this.containers.length - 1; o >= 0; o--) this.containers[o]._trigger("activate", e, this._uiHash(this));
      return t.ui.ddmanager && (t.ui.ddmanager.current = this), t.ui.ddmanager && !r.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e), this.dragging = !0, this.helper.addClass("ui-sortable-helper"), this._mouseDrag(e), !0;
    },
    _mouseDrag: function _mouseDrag(e) {
      var i,
        s,
        o,
        n,
        r = this.options,
        h = !1;
      for (this.position = this._generatePosition(e), this.positionAbs = this._convertPositionTo("absolute"), this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs), this.options.scroll && (this.scrollParent[0] !== document && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - e.pageY < r.scrollSensitivity ? this.scrollParent[0].scrollTop = h = this.scrollParent[0].scrollTop + r.scrollSpeed : e.pageY - this.overflowOffset.top < r.scrollSensitivity && (this.scrollParent[0].scrollTop = h = this.scrollParent[0].scrollTop - r.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - e.pageX < r.scrollSensitivity ? this.scrollParent[0].scrollLeft = h = this.scrollParent[0].scrollLeft + r.scrollSpeed : e.pageX - this.overflowOffset.left < r.scrollSensitivity && (this.scrollParent[0].scrollLeft = h = this.scrollParent[0].scrollLeft - r.scrollSpeed)) : (e.pageY - t(document).scrollTop() < r.scrollSensitivity ? h = t(document).scrollTop(t(document).scrollTop() - r.scrollSpeed) : t(window).height() - (e.pageY - t(document).scrollTop()) < r.scrollSensitivity && (h = t(document).scrollTop(t(document).scrollTop() + r.scrollSpeed)), e.pageX - t(document).scrollLeft() < r.scrollSensitivity ? h = t(document).scrollLeft(t(document).scrollLeft() - r.scrollSpeed) : t(window).width() - (e.pageX - t(document).scrollLeft()) < r.scrollSensitivity && (h = t(document).scrollLeft(t(document).scrollLeft() + r.scrollSpeed))), h !== !1 && t.ui.ddmanager && !r.dropBehaviour && t.ui.ddmanager.prepareOffsets(this, e)), this.positionAbs = this._convertPositionTo("absolute"), this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), i = this.items.length - 1; i >= 0; i--) if (s = this.items[i], o = s.item[0], n = this._intersectsWithPointer(s), n && s.instance === this.currentContainer && !(o === this.currentItem[0] || this.placeholder[1 === n ? "next" : "prev"]()[0] === o || t.contains(this.placeholder[0], o) || "semi-dynamic" === this.options.type && t.contains(this.element[0], o))) {
        if (this.direction = 1 === n ? "down" : "up", "pointer" !== this.options.tolerance && !this._intersectsWithSides(s)) break;
        this._rearrange(e, s), this._trigger("change", e, this._uiHash());
        break;
      }
      return this._contactContainers(e), t.ui.ddmanager && t.ui.ddmanager.drag(this, e), this._trigger("sort", e, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1;
    },
    _mouseStop: function _mouseStop(e, i) {
      if (e) {
        if (t.ui.ddmanager && !this.options.dropBehaviour && t.ui.ddmanager.drop(this, e), this.options.revert) {
          var s = this,
            o = this.placeholder.offset(),
            n = this.options.axis,
            r = {};
          n && "x" !== n || (r.left = o.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollLeft)), n && "y" !== n || (r.top = o.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === document.body ? 0 : this.offsetParent[0].scrollTop)), this.reverting = !0, t(this.helper).animate(r, parseInt(this.options.revert, 10) || 500, function () {
            s._clear(e);
          });
        } else this._clear(e, i);
        return !1;
      }
    },
    cancel: function cancel() {
      if (this.dragging) {
        this._mouseUp({
          target: null
        }), "original" === this.options.helper ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
        for (var e = this.containers.length - 1; e >= 0; e--) this.containers[e]._trigger("deactivate", null, this._uiHash(this)), this.containers[e].containerCache.over && (this.containers[e]._trigger("out", null, this._uiHash(this)), this.containers[e].containerCache.over = 0);
      }
      return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), t.extend(this, {
        helper: null,
        dragging: !1,
        reverting: !1,
        _noFinalSort: null
      }), this.domPosition.prev ? t(this.domPosition.prev).after(this.currentItem) : t(this.domPosition.parent).prepend(this.currentItem)), this;
    },
    serialize: function serialize(e) {
      var i = this._getItemsAsjQuery(e && e.connected),
        s = [];
      return e = e || {}, t(i).each(function () {
        var i = (t(e.item || this).attr(e.attribute || "id") || "").match(e.expression || /(.+)[\-=_](.+)/);
        i && s.push((e.key || i[1] + "[]") + "=" + (e.key && e.expression ? i[1] : i[2]));
      }), !s.length && e.key && s.push(e.key + "="), s.join("&");
    },
    toArray: function toArray(e) {
      var i = this._getItemsAsjQuery(e && e.connected),
        s = [];
      return e = e || {}, i.each(function () {
        s.push(t(e.item || this).attr(e.attribute || "id") || "");
      }), s;
    },
    _intersectsWith: function _intersectsWith(t) {
      var e = this.positionAbs.left,
        i = e + this.helperProportions.width,
        s = this.positionAbs.top,
        o = s + this.helperProportions.height,
        n = t.left,
        r = n + t.width,
        h = t.top,
        a = h + t.height,
        l = this.offset.click.top,
        c = this.offset.click.left,
        u = "x" === this.options.axis || s + l > h && s + l < a,
        f = "y" === this.options.axis || e + c > n && e + c < r,
        p = u && f;
      return "pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > t[this.floating ? "width" : "height"] ? p : n < e + this.helperProportions.width / 2 && i - this.helperProportions.width / 2 < r && h < s + this.helperProportions.height / 2 && o - this.helperProportions.height / 2 < a;
    },
    _intersectsWithPointer: function _intersectsWithPointer(t) {
      var e = "x" === this.options.axis || i(this.positionAbs.top + this.offset.click.top, t.top, t.height),
        s = "y" === this.options.axis || i(this.positionAbs.left + this.offset.click.left, t.left, t.width),
        o = e && s,
        n = this._getDragVerticalDirection(),
        r = this._getDragHorizontalDirection();
      return !!o && (this.floating ? r && "right" === r || "down" === n ? 2 : 1 : n && ("down" === n ? 2 : 1));
    },
    _intersectsWithSides: function _intersectsWithSides(t) {
      var e = i(this.positionAbs.top + this.offset.click.top, t.top + t.height / 2, t.height),
        s = i(this.positionAbs.left + this.offset.click.left, t.left + t.width / 2, t.width),
        o = this._getDragVerticalDirection(),
        n = this._getDragHorizontalDirection();
      return this.floating && n ? "right" === n && s || "left" === n && !s : o && ("down" === o && e || "up" === o && !e);
    },
    _getDragVerticalDirection: function _getDragVerticalDirection() {
      var t = this.positionAbs.top - this.lastPositionAbs.top;
      return 0 !== t && (t > 0 ? "down" : "up");
    },
    _getDragHorizontalDirection: function _getDragHorizontalDirection() {
      var t = this.positionAbs.left - this.lastPositionAbs.left;
      return 0 !== t && (t > 0 ? "right" : "left");
    },
    refresh: function refresh(t) {
      return this._refreshItems(t), this.refreshPositions(), this;
    },
    _connectWith: function _connectWith() {
      var t = this.options;
      return t.connectWith.constructor === String ? [t.connectWith] : t.connectWith;
    },
    _getItemsAsjQuery: function _getItemsAsjQuery(e) {
      function i() {
        h.push(this);
      }
      var s,
        o,
        n,
        r,
        h = [],
        a = [],
        l = this._connectWith();
      if (l && e) for (s = l.length - 1; s >= 0; s--) for (n = t(l[s]), o = n.length - 1; o >= 0; o--) r = t.data(n[o], this.widgetFullName), r && r !== this && !r.options.disabled && a.push([t.isFunction(r.options.items) ? r.options.items.call(r.element) : t(r.options.items, r.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), r]);
      for (a.push([t.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
        options: this.options,
        item: this.currentItem
      }) : t(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]), s = a.length - 1; s >= 0; s--) a[s][0].each(i);
      return t(h);
    },
    _removeCurrentsFromItems: function _removeCurrentsFromItems() {
      var e = this.currentItem.find(":data(" + this.widgetName + "-item)");
      this.items = t.grep(this.items, function (t) {
        for (var i = 0; i < e.length; i++) if (e[i] === t.item[0]) return !1;
        return !0;
      });
    },
    _refreshItems: function _refreshItems(e) {
      this.items = [], this.containers = [this];
      var i,
        s,
        o,
        n,
        r,
        h,
        a,
        l,
        c = this.items,
        u = [[t.isFunction(this.options.items) ? this.options.items.call(this.element[0], e, {
          item: this.currentItem
        }) : t(this.options.items, this.element), this]],
        f = this._connectWith();
      if (f && this.ready) for (i = f.length - 1; i >= 0; i--) for (o = t(f[i]), s = o.length - 1; s >= 0; s--) n = t.data(o[s], this.widgetFullName), n && n !== this && !n.options.disabled && (u.push([t.isFunction(n.options.items) ? n.options.items.call(n.element[0], e, {
        item: this.currentItem
      }) : t(n.options.items, n.element), n]), this.containers.push(n));
      for (i = u.length - 1; i >= 0; i--) for (r = u[i][1], h = u[i][0], s = 0, l = h.length; s < l; s++) a = t(h[s]), a.data(this.widgetName + "-item", r), c.push({
        item: a,
        instance: r,
        width: 0,
        height: 0,
        left: 0,
        top: 0
      });
    },
    refreshPositions: function refreshPositions(e) {
      this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
      var i, s, o, n;
      for (i = this.items.length - 1; i >= 0; i--) s = this.items[i], s.instance !== this.currentContainer && this.currentContainer && s.item[0] !== this.currentItem[0] || (o = this.options.toleranceElement ? t(this.options.toleranceElement, s.item) : s.item, e || (s.width = o.outerWidth(), s.height = o.outerHeight()), n = o.offset(), s.left = n.left, s.top = n.top);
      if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this);else for (i = this.containers.length - 1; i >= 0; i--) n = this.containers[i].element.offset(), this.containers[i].containerCache.left = n.left, this.containers[i].containerCache.top = n.top, this.containers[i].containerCache.width = this.containers[i].element.outerWidth(), this.containers[i].containerCache.height = this.containers[i].element.outerHeight();
      return this;
    },
    _createPlaceholder: function _createPlaceholder(e) {
      e = e || this;
      var i,
        s = e.options;
      s.placeholder && s.placeholder.constructor !== String || (i = s.placeholder, s.placeholder = {
        element: function element() {
          var s = e.currentItem[0].nodeName.toLowerCase(),
            o = t("<" + s + ">", e.document[0]).addClass(i || e.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper");
          return "tr" === s ? e.currentItem.children().each(function () {
            t("<td>&#160;</td>", e.document[0]).attr("colspan", t(this).attr("colspan") || 1).appendTo(o);
          }) : "img" === s && o.attr("src", e.currentItem.attr("src")), i || o.css("visibility", "hidden"), o;
        },
        update: function update(t, o) {
          i && !s.forcePlaceholderSize || (o.height() || o.height(e.currentItem.innerHeight() - parseInt(e.currentItem.css("paddingTop") || 0, 10) - parseInt(e.currentItem.css("paddingBottom") || 0, 10)), o.width() || o.width(e.currentItem.innerWidth() - parseInt(e.currentItem.css("paddingLeft") || 0, 10) - parseInt(e.currentItem.css("paddingRight") || 0, 10)));
        }
      }), e.placeholder = t(s.placeholder.element.call(e.element, e.currentItem)), e.currentItem.after(e.placeholder), s.placeholder.update(e, e.placeholder);
    },
    _contactContainers: function _contactContainers(e) {
      var o,
        n,
        r,
        h,
        a,
        l,
        c,
        u,
        f,
        p,
        d = null,
        m = null;
      for (o = this.containers.length - 1; o >= 0; o--) if (!t.contains(this.currentItem[0], this.containers[o].element[0])) if (this._intersectsWith(this.containers[o].containerCache)) {
        if (d && t.contains(this.containers[o].element[0], d.element[0])) continue;
        d = this.containers[o], m = o;
      } else this.containers[o].containerCache.over && (this.containers[o]._trigger("out", e, this._uiHash(this)), this.containers[o].containerCache.over = 0);
      if (d) if (1 === this.containers.length) this.containers[m].containerCache.over || (this.containers[m]._trigger("over", e, this._uiHash(this)), this.containers[m].containerCache.over = 1);else {
        for (r = 1e4, h = null, p = d.floating || s(this.currentItem), a = p ? "left" : "top", l = p ? "width" : "height", c = this.positionAbs[a] + this.offset.click[a], n = this.items.length - 1; n >= 0; n--) t.contains(this.containers[m].element[0], this.items[n].item[0]) && this.items[n].item[0] !== this.currentItem[0] && (p && !i(this.positionAbs.top + this.offset.click.top, this.items[n].top, this.items[n].height) || (u = this.items[n].item.offset()[a], f = !1, Math.abs(u - c) > Math.abs(u + this.items[n][l] - c) && (f = !0, u += this.items[n][l]), Math.abs(u - c) < r && (r = Math.abs(u - c), h = this.items[n], this.direction = f ? "up" : "down")));
        if (!h && !this.options.dropOnEmpty) return;
        if (this.currentContainer === this.containers[m]) return;
        h ? this._rearrange(e, h, null, !0) : this._rearrange(e, null, this.containers[m].element, !0), this._trigger("change", e, this._uiHash()), this.containers[m]._trigger("change", e, this._uiHash(this)), this.currentContainer = this.containers[m], this.options.placeholder.update(this.currentContainer, this.placeholder), this.containers[m]._trigger("over", e, this._uiHash(this)), this.containers[m].containerCache.over = 1;
      }
    },
    _createHelper: function _createHelper(e) {
      var i = this.options,
        s = t.isFunction(i.helper) ? t(i.helper.apply(this.element[0], [e, this.currentItem])) : "clone" === i.helper ? this.currentItem.clone() : this.currentItem;
      return s.parents("body").length || t("parent" !== i.appendTo ? i.appendTo : this.currentItem[0].parentNode)[0].appendChild(s[0]), s[0] === this.currentItem[0] && (this._storedCSS = {
        width: this.currentItem[0].style.width,
        height: this.currentItem[0].style.height,
        position: this.currentItem.css("position"),
        top: this.currentItem.css("top"),
        left: this.currentItem.css("left")
      }), s[0].style.width && !i.forceHelperSize || s.width(this.currentItem.width()), s[0].style.height && !i.forceHelperSize || s.height(this.currentItem.height()), s;
    },
    _adjustOffsetFromHelper: function _adjustOffsetFromHelper(e) {
      "string" == typeof e && (e = e.split(" ")), t.isArray(e) && (e = {
        left: +e[0],
        top: +e[1] || 0
      }), "left" in e && (this.offset.click.left = e.left + this.margins.left), "right" in e && (this.offset.click.left = this.helperProportions.width - e.right + this.margins.left), "top" in e && (this.offset.click.top = e.top + this.margins.top), "bottom" in e && (this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top);
    },
    _getParentOffset: function _getParentOffset() {
      this.offsetParent = this.helper.offsetParent();
      var e = this.offsetParent.offset();
      return "absolute" === this.cssPosition && this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0]) && (e.left += this.scrollParent.scrollLeft(), e.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === document.body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && t.ui.ie) && (e = {
        top: 0,
        left: 0
      }), {
        top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
        left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
      };
    },
    _getRelativeOffset: function _getRelativeOffset() {
      if ("relative" === this.cssPosition) {
        var t = this.currentItem.position();
        return {
          top: t.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
          left: t.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
        };
      }
      return {
        top: 0,
        left: 0
      };
    },
    _cacheMargins: function _cacheMargins() {
      this.margins = {
        left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
        top: parseInt(this.currentItem.css("marginTop"), 10) || 0
      };
    },
    _cacheHelperProportions: function _cacheHelperProportions() {
      this.helperProportions = {
        width: this.helper.outerWidth(),
        height: this.helper.outerHeight()
      };
    },
    _setContainment: function _setContainment() {
      var e,
        i,
        s,
        o = this.options;
      "parent" === o.containment && (o.containment = this.helper[0].parentNode), "document" !== o.containment && "window" !== o.containment || (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, t("document" === o.containment ? document : window).width() - this.helperProportions.width - this.margins.left, (t("document" === o.containment ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(o.containment) || (e = t(o.containment)[0], i = t(o.containment).offset(), s = "hidden" !== t(e).css("overflow"), this.containment = [i.left + (parseInt(t(e).css("borderLeftWidth"), 10) || 0) + (parseInt(t(e).css("paddingLeft"), 10) || 0) - this.margins.left, i.top + (parseInt(t(e).css("borderTopWidth"), 10) || 0) + (parseInt(t(e).css("paddingTop"), 10) || 0) - this.margins.top, i.left + (s ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) - (parseInt(t(e).css("borderLeftWidth"), 10) || 0) - (parseInt(t(e).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, i.top + (s ? Math.max(e.scrollHeight, e.offsetHeight) : e.offsetHeight) - (parseInt(t(e).css("borderTopWidth"), 10) || 0) - (parseInt(t(e).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]);
    },
    _convertPositionTo: function _convertPositionTo(e, i) {
      i || (i = this.position);
      var s = "absolute" === e ? 1 : -1,
        o = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
        n = /(html|body)/i.test(o[0].tagName);
      return {
        top: i.top + this.offset.relative.top * s + this.offset.parent.top * s - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : n ? 0 : o.scrollTop()) * s,
        left: i.left + this.offset.relative.left * s + this.offset.parent.left * s - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : n ? 0 : o.scrollLeft()) * s
      };
    },
    _generatePosition: function _generatePosition(e) {
      var i,
        s,
        o = this.options,
        n = e.pageX,
        r = e.pageY,
        h = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && t.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
        a = /(html|body)/i.test(h[0].tagName);
      return "relative" !== this.cssPosition || this.scrollParent[0] !== document && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (e.pageX - this.offset.click.left < this.containment[0] && (n = this.containment[0] + this.offset.click.left), e.pageY - this.offset.click.top < this.containment[1] && (r = this.containment[1] + this.offset.click.top), e.pageX - this.offset.click.left > this.containment[2] && (n = this.containment[2] + this.offset.click.left), e.pageY - this.offset.click.top > this.containment[3] && (r = this.containment[3] + this.offset.click.top)), o.grid && (i = this.originalPageY + Math.round((r - this.originalPageY) / o.grid[1]) * o.grid[1], r = this.containment ? i - this.offset.click.top >= this.containment[1] && i - this.offset.click.top <= this.containment[3] ? i : i - this.offset.click.top >= this.containment[1] ? i - o.grid[1] : i + o.grid[1] : i, s = this.originalPageX + Math.round((n - this.originalPageX) / o.grid[0]) * o.grid[0], n = this.containment ? s - this.offset.click.left >= this.containment[0] && s - this.offset.click.left <= this.containment[2] ? s : s - this.offset.click.left >= this.containment[0] ? s - o.grid[0] : s + o.grid[0] : s)), {
        top: r - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : a ? 0 : h.scrollTop()),
        left: n - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : a ? 0 : h.scrollLeft())
      };
    },
    _rearrange: function _rearrange(t, e, i, s) {
      i ? i[0].appendChild(this.placeholder[0]) : e.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? e.item[0] : e.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1;
      var o = this.counter;
      this._delay(function () {
        o === this.counter && this.refreshPositions(!s);
      });
    },
    _clear: function _clear(t, e) {
      function i(t, e, i) {
        return function (s) {
          i._trigger(t, s, e._uiHash(e));
        };
      }
      this.reverting = !1;
      var s,
        o = [];
      if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {
        for (s in this._storedCSS) "auto" !== this._storedCSS[s] && "static" !== this._storedCSS[s] || (this._storedCSS[s] = "");
        this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper");
      } else this.currentItem.show();
      for (this.fromOutside && !e && o.push(function (t) {
        this._trigger("receive", t, this._uiHash(this.fromOutside));
      }), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || e || o.push(function (t) {
        this._trigger("update", t, this._uiHash());
      }), this !== this.currentContainer && (e || (o.push(function (t) {
        this._trigger("remove", t, this._uiHash());
      }), o.push(function (t) {
        return function (e) {
          t._trigger("receive", e, this._uiHash(this));
        };
      }.call(this, this.currentContainer)), o.push(function (t) {
        return function (e) {
          t._trigger("update", e, this._uiHash(this));
        };
      }.call(this, this.currentContainer)))), s = this.containers.length - 1; s >= 0; s--) e || o.push(i("deactivate", this, this.containers[s])), this.containers[s].containerCache.over && (o.push(i("out", this, this.containers[s])), this.containers[s].containerCache.over = 0);
      if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), this.storedStylesheet.remove()), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex), this.dragging = !1, this.cancelHelperRemoval) {
        if (!e) {
          for (this._trigger("beforeStop", t, this._uiHash()), s = 0; s < o.length; s++) o[s].call(this, t);
          this._trigger("stop", t, this._uiHash());
        }
        return this.fromOutside = !1, !1;
      }
      if (e || this._trigger("beforeStop", t, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.helper[0] !== this.currentItem[0] && this.helper.remove(), this.helper = null, !e) {
        for (s = 0; s < o.length; s++) o[s].call(this, t);
        this._trigger("stop", t, this._uiHash());
      }
      return this.fromOutside = !1, !0;
    },
    _trigger: function _trigger() {
      t.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel();
    },
    _uiHash: function _uiHash(e) {
      var i = e || this;
      return {
        helper: i.helper,
        placeholder: i.placeholder || t([]),
        position: i.position,
        originalPosition: i.originalPosition,
        offset: i.positionAbs,
        item: i.currentItem,
        sender: e ? e.element : null
      };
    }
  });
}(jQuery);

function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}

!function (t) {
  t.color = {}, t.color.make = function (i, e, o, n) {
    var a = {};
    return a.r = i || 0, a.g = e || 0, a.b = o || 0, a.a = null != n ? n : 1, a.add = function (t, i) {
      for (var e = 0; e < t.length; ++e) a[t.charAt(e)] += i;
      return a.normalize();
    }, a.scale = function (t, i) {
      for (var e = 0; e < t.length; ++e) a[t.charAt(e)] *= i;
      return a.normalize();
    }, a.toString = function () {
      return a.a >= 1 ? "rgb(" + [a.r, a.g, a.b].join(",") + ")" : "rgba(" + [a.r, a.g, a.b, a.a].join(",") + ")";
    }, a.normalize = function () {
      function t(t, i, e) {
        return i < t ? t : i > e ? e : i;
      }
      return a.r = t(0, parseInt(a.r), 255), a.g = t(0, parseInt(a.g), 255), a.b = t(0, parseInt(a.b), 255), a.a = t(0, a.a, 1), a;
    }, a.clone = function () {
      return t.color.make(a.r, a.b, a.g, a.a);
    }, a.normalize();
  }, t.color.extract = function (i, e) {
    var o;
    do {
      if (o = i.css(e).toLowerCase(), "" != o && "transparent" != o) break;
      i = i.parent();
    } while (i.length && !t.nodeName(i.get(0), "body"));
    return "rgba(0, 0, 0, 0)" == o && (o = "transparent"), t.color.parse(o);
  }, t.color.parse = function (e) {
    var o,
      n = t.color.make;
    if (o = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(e)) return n(parseInt(o[1], 10), parseInt(o[2], 10), parseInt(o[3], 10));
    if (o = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(e)) return n(parseInt(o[1], 10), parseInt(o[2], 10), parseInt(o[3], 10), parseFloat(o[4]));
    if (o = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(e)) return n(2.55 * parseFloat(o[1]), 2.55 * parseFloat(o[2]), 2.55 * parseFloat(o[3]));
    if (o = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(e)) return n(2.55 * parseFloat(o[1]), 2.55 * parseFloat(o[2]), 2.55 * parseFloat(o[3]), parseFloat(o[4]));
    if (o = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(e)) return n(parseInt(o[1], 16), parseInt(o[2], 16), parseInt(o[3], 16));
    if (o = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(e)) return n(parseInt(o[1] + o[1], 16), parseInt(o[2] + o[2], 16), parseInt(o[3] + o[3], 16));
    var a = t.trim(e).toLowerCase();
    return "transparent" == a ? n(255, 255, 255, 0) : (o = i[a] || [0, 0, 0], n(o[0], o[1], o[2]));
  };
  var i = {
    aqua: [0, 255, 255],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    black: [0, 0, 0],
    blue: [0, 0, 255],
    brown: [165, 42, 42],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgrey: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkviolet: [148, 0, 211],
    fuchsia: [255, 0, 255],
    gold: [255, 215, 0],
    green: [0, 128, 0],
    indigo: [75, 0, 130],
    khaki: [240, 230, 140],
    lightblue: [173, 216, 230],
    lightcyan: [224, 255, 255],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    navy: [0, 0, 128],
    olive: [128, 128, 0],
    orange: [255, 165, 0],
    pink: [255, 192, 203],
    purple: [128, 0, 128],
    violet: [128, 0, 128],
    red: [255, 0, 0],
    silver: [192, 192, 192],
    white: [255, 255, 255],
    yellow: [255, 255, 0]
  };
}(jQuery), function (t) {
  function i(i, e) {
    var o = e.children("." + i)[0];
    if (null == o && (o = document.createElement("canvas"), o.className = i, t(o).css({
      direction: "ltr",
      position: "absolute",
      left: 0,
      top: 0
    }).appendTo(e), !o.getContext)) {
      if (!window.G_vmlCanvasManager) throw new Error("Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.");
      o = window.G_vmlCanvasManager.initElement(o);
    }
    this.element = o;
    var n = this.context = o.getContext("2d"),
      a = window.devicePixelRatio || 1,
      r = n.webkitBackingStorePixelRatio || n.mozBackingStorePixelRatio || n.msBackingStorePixelRatio || n.oBackingStorePixelRatio || n.backingStorePixelRatio || 1;
    this.pixelRatio = a / r, this.resize(e.width(), e.height()), this.textContainer = null, this.text = {}, this._textCache = {};
  }
  function e(e, n, a, r) {
    function l(t, i) {
      i = [xt].concat(i);
      for (var e = 0; e < t.length; ++e) t[e].apply(this, i);
    }
    function s() {
      for (var e = {
          Canvas: i
        }, o = 0; o < r.length; ++o) {
        var n = r[o];
        n.init(xt, e), n.options && t.extend(!0, nt, n.options);
      }
    }
    function c(i) {
      t.extend(!0, nt, i), i && i.colors && (nt.colors = i.colors), null == nt.xaxis.color && (nt.xaxis.color = t.color.parse(nt.grid.color).scale("a", .22).toString()), null == nt.yaxis.color && (nt.yaxis.color = t.color.parse(nt.grid.color).scale("a", .22).toString()), null == nt.xaxis.tickColor && (nt.xaxis.tickColor = nt.grid.tickColor || nt.xaxis.color), null == nt.yaxis.tickColor && (nt.yaxis.tickColor = nt.grid.tickColor || nt.yaxis.color), null == nt.grid.borderColor && (nt.grid.borderColor = nt.grid.color), null == nt.grid.tickColor && (nt.grid.tickColor = t.color.parse(nt.grid.color).scale("a", .22).toString());
      var o,
        n,
        a,
        r = e.css("font-size"),
        s = r ? +r.replace("px", "") : 13,
        c = {
          style: e.css("font-style"),
          size: Math.round(.8 * s),
          variant: e.css("font-variant"),
          weight: e.css("font-weight"),
          family: e.css("font-family")
        };
      for (a = nt.xaxes.length || 1, o = 0; o < a; ++o) n = nt.xaxes[o], n && !n.tickColor && (n.tickColor = n.color), n = t.extend(!0, {}, nt.xaxis, n), nt.xaxes[o] = n, n.font && (n.font = t.extend({}, c, n.font), n.font.color || (n.font.color = n.color), n.font.lineHeight || (n.font.lineHeight = Math.round(1.15 * n.font.size)));
      for (a = nt.yaxes.length || 1, o = 0; o < a; ++o) n = nt.yaxes[o], n && !n.tickColor && (n.tickColor = n.color), n = t.extend(!0, {}, nt.yaxis, n), nt.yaxes[o] = n, n.font && (n.font = t.extend({}, c, n.font), n.font.color || (n.font.color = n.color), n.font.lineHeight || (n.font.lineHeight = Math.round(1.15 * n.font.size)));
      for (nt.xaxis.noTicks && null == nt.xaxis.ticks && (nt.xaxis.ticks = nt.xaxis.noTicks), nt.yaxis.noTicks && null == nt.yaxis.ticks && (nt.yaxis.ticks = nt.yaxis.noTicks), nt.x2axis && (nt.xaxes[1] = t.extend(!0, {}, nt.xaxis, nt.x2axis), nt.xaxes[1].position = "top", null == nt.x2axis.min && (nt.xaxes[1].min = null), null == nt.x2axis.max && (nt.xaxes[1].max = null)), nt.y2axis && (nt.yaxes[1] = t.extend(!0, {}, nt.yaxis, nt.y2axis), nt.yaxes[1].position = "right", null == nt.y2axis.min && (nt.yaxes[1].min = null), null == nt.y2axis.max && (nt.yaxes[1].max = null)), nt.grid.coloredAreas && (nt.grid.markings = nt.grid.coloredAreas), nt.grid.coloredAreasColor && (nt.grid.markingsColor = nt.grid.coloredAreasColor), nt.lines && t.extend(!0, nt.series.lines, nt.lines), nt.points && t.extend(!0, nt.series.points, nt.points), nt.bars && t.extend(!0, nt.series.bars, nt.bars), null != nt.shadowSize && (nt.series.shadowSize = nt.shadowSize), null != nt.highlightColor && (nt.series.highlightColor = nt.highlightColor), o = 0; o < nt.xaxes.length; ++o) x(ht, o + 1).options = nt.xaxes[o];
      for (o = 0; o < nt.yaxes.length; ++o) x(ft, o + 1).options = nt.yaxes[o];
      for (var h in mt) nt.hooks[h] && nt.hooks[h].length && (mt[h] = mt[h].concat(nt.hooks[h]));
      l(mt.processOptions, [nt]);
    }
    function h(t) {
      ot = f(t), g(), b();
    }
    function f(i) {
      for (var e = [], o = 0; o < i.length; ++o) {
        var n = t.extend(!0, {}, nt.series);
        null != i[o].data ? (n.data = i[o].data, delete i[o].data, t.extend(!0, n, i[o]), i[o].data = n.data) : n.data = i[o], e.push(n);
      }
      return e;
    }
    function u(t, i) {
      var e = t[i + "axis"];
      return "object" == _typeof(e) && (e = e.n), "number" != typeof e && (e = 1), e;
    }
    function d() {
      return t.grep(ht.concat(ft), function (t) {
        return t;
      });
    }
    function p(t) {
      var i,
        e,
        o = {};
      for (i = 0; i < ht.length; ++i) e = ht[i], e && e.used && (o["x" + e.n] = e.c2p(t.left));
      for (i = 0; i < ft.length; ++i) e = ft[i], e && e.used && (o["y" + e.n] = e.c2p(t.top));
      return void 0 !== o.x1 && (o.x = o.x1), void 0 !== o.y1 && (o.y = o.y1), o;
    }
    function m(t) {
      var i,
        e,
        o,
        n = {};
      for (i = 0; i < ht.length; ++i) if (e = ht[i], e && e.used && (o = "x" + e.n, null == t[o] && 1 == e.n && (o = "x"), null != t[o])) {
        n.left = e.p2c(t[o]);
        break;
      }
      for (i = 0; i < ft.length; ++i) if (e = ft[i], e && e.used && (o = "y" + e.n, null == t[o] && 1 == e.n && (o = "y"), null != t[o])) {
        n.top = e.p2c(t[o]);
        break;
      }
      return n;
    }
    function x(i, e) {
      return i[e - 1] || (i[e - 1] = {
        n: e,
        direction: i == ht ? "x" : "y",
        options: t.extend(!0, {}, i == ht ? nt.xaxis : nt.yaxis)
      }), i[e - 1];
    }
    function g() {
      var i,
        e = ot.length,
        o = -1;
      for (i = 0; i < ot.length; ++i) {
        var n = ot[i].color;
        null != n && (e--, "number" == typeof n && n > o && (o = n));
      }
      e <= o && (e = o + 1);
      var a,
        r = [],
        l = nt.colors,
        s = l.length,
        c = 0;
      for (i = 0; i < e; i++) a = t.color.parse(l[i % s] || "#666"), i % s == 0 && i && (c = c >= 0 ? c < .5 ? -c - .2 : 0 : -c), r[i] = a.scale("rgb", 1 + c);
      var h,
        f = 0;
      for (i = 0; i < ot.length; ++i) {
        if (h = ot[i], null == h.color ? (h.color = r[f].toString(), ++f) : "number" == typeof h.color && (h.color = r[h.color].toString()), null == h.lines.show) {
          var d,
            p = !0;
          for (d in h) if (h[d] && h[d].show) {
            p = !1;
            break;
          }
          p && (h.lines.show = !0);
        }
        null == h.lines.zero && (h.lines.zero = !!h.lines.fill), h.xaxis = x(ht, u(h, "x")), h.yaxis = x(ft, u(h, "y"));
      }
    }
    function b() {
      function i(t, i, e) {
        i < t.datamin && i != -b && (t.datamin = i), e > t.datamax && e != b && (t.datamax = e);
      }
      var e,
        o,
        n,
        a,
        r,
        s,
        c,
        h,
        f,
        u,
        p,
        m,
        x = Number.POSITIVE_INFINITY,
        g = Number.NEGATIVE_INFINITY,
        b = Number.MAX_VALUE;
      for (t.each(d(), function (t, i) {
        i.datamin = x, i.datamax = g, i.used = !1;
      }), e = 0; e < ot.length; ++e) r = ot[e], r.datapoints = {
        points: []
      }, l(mt.processRawData, [r, r.data, r.datapoints]);
      for (e = 0; e < ot.length; ++e) {
        if (r = ot[e], p = r.data, m = r.datapoints.format, !m) {
          if (m = [], m.push({
            x: !0,
            number: !0,
            required: !0
          }), m.push({
            y: !0,
            number: !0,
            required: !0
          }), r.bars.show || r.lines.show && r.lines.fill) {
            var v = !!(r.bars.show && r.bars.zero || r.lines.show && r.lines.zero);
            m.push({
              y: !0,
              number: !0,
              required: !1,
              defaultValue: 0,
              autoscale: v
            }), r.bars.horizontal && (delete m[m.length - 1].y, m[m.length - 1].x = !0);
          }
          r.datapoints.format = m;
        }
        if (null == r.datapoints.pointsize) {
          r.datapoints.pointsize = m.length, c = r.datapoints.pointsize, s = r.datapoints.points;
          var k = r.lines.show && r.lines.steps;
          for (r.xaxis.used = r.yaxis.used = !0, o = n = 0; o < p.length; ++o, n += c) {
            u = p[o];
            var y = null == u;
            if (!y) for (a = 0; a < c; ++a) h = u[a], f = m[a], f && (f.number && null != h && (h = +h, isNaN(h) ? h = null : h == 1 / 0 ? h = b : h == -(1 / 0) && (h = -b)), null == h && (f.required && (y = !0), null != f.defaultValue && (h = f.defaultValue))), s[n + a] = h;
            if (y) for (a = 0; a < c; ++a) h = s[n + a], null != h && (f = m[a], f.autoscale !== !1 && (f.x && i(r.xaxis, h, h), f.y && i(r.yaxis, h, h))), s[n + a] = null;else if (k && n > 0 && null != s[n - c] && s[n - c] != s[n] && s[n - c + 1] != s[n + 1]) {
              for (a = 0; a < c; ++a) s[n + c + a] = s[n + a];
              s[n + 1] = s[n - c + 1], n += c;
            }
          }
        }
      }
      for (e = 0; e < ot.length; ++e) r = ot[e], l(mt.processDatapoints, [r, r.datapoints]);
      for (e = 0; e < ot.length; ++e) {
        r = ot[e], s = r.datapoints.points, c = r.datapoints.pointsize, m = r.datapoints.format;
        var w = x,
          M = x,
          T = g,
          C = g;
        for (o = 0; o < s.length; o += c) if (null != s[o]) for (a = 0; a < c; ++a) h = s[o + a], f = m[a], f && f.autoscale !== !1 && h != b && h != -b && (f.x && (h < w && (w = h), h > T && (T = h)), f.y && (h < M && (M = h), h > C && (C = h)));
        if (r.bars.show) {
          var S;
          switch (r.bars.align) {
            case "left":
              S = 0;
              break;
            case "right":
              S = -r.bars.barWidth;
              break;
            default:
              S = -r.bars.barWidth / 2;
          }
          r.bars.horizontal ? (M += S, C += S + r.bars.barWidth) : (w += S, T += S + r.bars.barWidth);
        }
        i(r.xaxis, w, T), i(r.yaxis, M, C);
      }
      t.each(d(), function (t, i) {
        i.datamin == x && (i.datamin = null), i.datamax == g && (i.datamax = null);
      });
    }
    function v() {
      e.css("padding", 0).children().filter(function () {
        return !t(this).hasClass("flot-overlay") && !t(this).hasClass("flot-base");
      }).remove(), "static" == e.css("position") && e.css("position", "relative"), at = new i("flot-base", e), rt = new i("flot-overlay", e), st = at.context, ct = rt.context, lt = t(rt.element).unbind();
      var o = e.data("plot");
      o && (o.shutdown(), rt.clear()), e.data("plot", xt);
    }
    function k() {
      nt.grid.hoverable && (lt.mousemove(X), lt.bind("mouseleave", Y)), nt.grid.clickable && lt.click(q), l(mt.bindEvents, [lt]);
    }
    function y() {
      bt && clearTimeout(bt), lt.unbind("mousemove", X), lt.unbind("mouseleave", Y), lt.unbind("click", q), l(mt.shutdown, [lt]);
    }
    function w(t) {
      function i(t) {
        return t;
      }
      var e,
        o,
        n = t.options.transform || i,
        a = t.options.inverseTransform;
      "x" == t.direction ? (e = t.scale = dt / Math.abs(n(t.max) - n(t.min)), o = Math.min(n(t.max), n(t.min))) : (e = t.scale = pt / Math.abs(n(t.max) - n(t.min)), e = -e, o = Math.max(n(t.max), n(t.min))), n == i ? t.p2c = function (t) {
        return (t - o) * e;
      } : t.p2c = function (t) {
        return (n(t) - o) * e;
      }, a ? t.c2p = function (t) {
        return a(o + t / e);
      } : t.c2p = function (t) {
        return o + t / e;
      };
    }
    function M(t) {
      for (var i = t.options, e = t.ticks || [], o = i.labelWidth || 0, n = i.labelHeight || 0, a = o || ("x" == t.direction ? Math.floor(at.width / (e.length || 1)) : null), r = t.direction + "Axis " + t.direction + t.n + "Axis", l = "flot-" + t.direction + "-axis flot-" + t.direction + t.n + "-axis " + r, s = i.font || "flot-tick-label tickLabel", c = 0; c < e.length; ++c) {
        var h = e[c];
        if (h.label) {
          var f = at.getTextInfo(l, h.label, s, null, a);
          o = Math.max(o, f.width), n = Math.max(n, f.height);
        }
      }
      t.labelWidth = i.labelWidth || o, t.labelHeight = i.labelHeight || n;
    }
    function T(i) {
      var e = i.labelWidth,
        o = i.labelHeight,
        n = i.options.position,
        a = "x" === i.direction,
        r = i.options.tickLength,
        l = nt.grid.axisMargin,
        s = nt.grid.labelMargin,
        c = !0,
        h = !0,
        f = !0,
        u = !1;
      t.each(a ? ht : ft, function (t, e) {
        e && (e.show || e.reserveSpace) && (e === i ? u = !0 : e.options.position === n && (u ? h = !1 : c = !1), u || (f = !1));
      }), h && (l = 0), null == r && (r = f ? "full" : 5), isNaN(+r) || (s += +r), a ? (o += s, "bottom" == n ? (ut.bottom += o + l, i.box = {
        top: at.height - ut.bottom,
        height: o
      }) : (i.box = {
        top: ut.top + l,
        height: o
      }, ut.top += o + l)) : (e += s, "left" == n ? (i.box = {
        left: ut.left + l,
        width: e
      }, ut.left += e + l) : (ut.right += e + l, i.box = {
        left: at.width - ut.right,
        width: e
      })), i.position = n, i.tickLength = r, i.box.padding = s, i.innermost = c;
    }
    function C(t) {
      "x" == t.direction ? (t.box.left = ut.left - t.labelWidth / 2, t.box.width = at.width - ut.left - ut.right + t.labelWidth) : (t.box.top = ut.top - t.labelHeight / 2, t.box.height = at.height - ut.bottom - ut.top + t.labelHeight);
    }
    function S() {
      var i,
        e = nt.grid.minBorderMargin;
      if (null == e) for (e = 0, i = 0; i < ot.length; ++i) e = Math.max(e, 2 * (ot[i].points.radius + ot[i].points.lineWidth / 2));
      var o = {
        left: e,
        right: e,
        top: e,
        bottom: e
      };
      t.each(d(), function (t, i) {
        i.reserveSpace && i.ticks && i.ticks.length && ("x" === i.direction ? (o.left = Math.max(o.left, i.labelWidth / 2), o.right = Math.max(o.right, i.labelWidth / 2)) : (o.bottom = Math.max(o.bottom, i.labelHeight / 2), o.top = Math.max(o.top, i.labelHeight / 2)));
      }), ut.left = Math.ceil(Math.max(o.left, ut.left)), ut.right = Math.ceil(Math.max(o.right, ut.right)), ut.top = Math.ceil(Math.max(o.top, ut.top)), ut.bottom = Math.ceil(Math.max(o.bottom, ut.bottom));
    }
    function W() {
      var i,
        e = d(),
        o = nt.grid.show;
      for (var n in ut) {
        var a = nt.grid.margin || 0;
        ut[n] = "number" == typeof a ? a : a[n] || 0;
      }
      l(mt.processOffset, [ut]);
      for (var n in ut) "object" == _typeof(nt.grid.borderWidth) ? ut[n] += o ? nt.grid.borderWidth[n] : 0 : ut[n] += o ? nt.grid.borderWidth : 0;
      if (t.each(e, function (t, i) {
        var e = i.options;
        i.show = null == e.show ? i.used : e.show, i.reserveSpace = null == e.reserveSpace ? i.show : e.reserveSpace, z(i);
      }), o) {
        var r = t.grep(e, function (t) {
          return t.show || t.reserveSpace;
        });
        for (t.each(r, function (t, i) {
          I(i), A(i), F(i, i.ticks), M(i);
        }), i = r.length - 1; i >= 0; --i) T(r[i]);
        S(), t.each(r, function (t, i) {
          C(i);
        });
      }
      dt = at.width - ut.left - ut.right, pt = at.height - ut.bottom - ut.top, t.each(e, function (t, i) {
        w(i);
      }), o && O(), _();
    }
    function z(t) {
      var i = t.options,
        e = +(null != i.min ? i.min : t.datamin),
        o = +(null != i.max ? i.max : t.datamax),
        n = o - e;
      if (0 == n) {
        var a = 0 == o ? 1 : .01;
        null == i.min && (e -= a), null != i.max && null == i.min || (o += a);
      } else {
        var r = i.autoscaleMargin;
        null != r && (null == i.min && (e -= n * r, e < 0 && null != t.datamin && t.datamin >= 0 && (e = 0)), null == i.max && (o += n * r, o > 0 && null != t.datamax && t.datamax <= 0 && (o = 0)));
      }
      t.min = e, t.max = o;
    }
    function I(i) {
      var e,
        n = i.options;
      e = "number" == typeof n.ticks && n.ticks > 0 ? n.ticks : .3 * Math.sqrt("x" == i.direction ? at.width : at.height);
      var a = (i.max - i.min) / e,
        r = -Math.floor(Math.log(a) / Math.LN10),
        l = n.tickDecimals;
      null != l && r > l && (r = l);
      var s,
        c = Math.pow(10, -r),
        h = a / c;
      if (h < 1.5 ? s = 1 : h < 3 ? (s = 2, h > 2.25 && (null == l || r + 1 <= l) && (s = 2.5, ++r)) : s = h < 7.5 ? 5 : 10, s *= c, null != n.minTickSize && s < n.minTickSize && (s = n.minTickSize), i.delta = a, i.tickDecimals = Math.max(0, null != l ? l : r), i.tickSize = n.tickSize || s, "time" == n.mode && !i.tickGenerator) throw new Error("Time mode requires the flot.time plugin.");
      if (i.tickGenerator || (i.tickGenerator = function (t) {
        var i,
          e = [],
          n = o(t.min, t.tickSize),
          a = 0,
          r = Number.NaN;
        do i = r, r = n + a * t.tickSize, e.push(r), ++a; while (r < t.max && r != i);
        return e;
      }, i.tickFormatter = function (t, i) {
        var e = i.tickDecimals ? Math.pow(10, i.tickDecimals) : 1,
          o = "" + Math.round(t * e) / e;
        if (null != i.tickDecimals) {
          var n = o.indexOf("."),
            a = n == -1 ? 0 : o.length - n - 1;
          if (a < i.tickDecimals) return (a ? o : o + ".") + ("" + e).substr(1, i.tickDecimals - a);
        }
        return o;
      }), t.isFunction(n.tickFormatter) && (i.tickFormatter = function (t, i) {
        return "" + n.tickFormatter(t, i);
      }), null != n.alignTicksWithAxis) {
        var f = ("x" == i.direction ? ht : ft)[n.alignTicksWithAxis - 1];
        if (f && f.used && f != i) {
          var u = i.tickGenerator(i);
          if (u.length > 0 && (null == n.min && (i.min = Math.min(i.min, u[0])), null == n.max && u.length > 1 && (i.max = Math.max(i.max, u[u.length - 1]))), i.tickGenerator = function (t) {
            var i,
              e,
              o = [];
            for (e = 0; e < f.ticks.length; ++e) i = (f.ticks[e].v - f.min) / (f.max - f.min), i = t.min + i * (t.max - t.min), o.push(i);
            return o;
          }, !i.mode && null == n.tickDecimals) {
            var d = Math.max(0, -Math.floor(Math.log(i.delta) / Math.LN10) + 1),
              p = i.tickGenerator(i);
            p.length > 1 && /\..*0$/.test((p[1] - p[0]).toFixed(d)) || (i.tickDecimals = d);
          }
        }
      }
    }
    function A(i) {
      var e = i.options.ticks,
        o = [];
      null == e || "number" == typeof e && e > 0 ? o = i.tickGenerator(i) : e && (o = t.isFunction(e) ? e(i) : e);
      var n, a;
      for (i.ticks = [], n = 0; n < o.length; ++n) {
        var r = null,
          l = o[n];
        "object" == _typeof(l) ? (a = +l[0], l.length > 1 && (r = l[1])) : a = +l, null == r && (r = i.tickFormatter(a, i)), isNaN(a) || i.ticks.push({
          v: a,
          label: r
        });
      }
    }
    function F(t, i) {
      t.options.autoscaleMargin && i.length > 0 && (null == t.options.min && (t.min = Math.min(t.min, i[0].v)), null == t.options.max && i.length > 1 && (t.max = Math.max(t.max, i[i.length - 1].v)));
    }
    function P() {
      at.clear(), l(mt.drawBackground, [st]);
      var t = nt.grid;
      t.show && t.backgroundColor && D(), t.show && !t.aboveData && L();
      for (var i = 0; i < ot.length; ++i) l(mt.drawSeries, [st, ot[i]]), R(ot[i]);
      l(mt.draw, [st]), t.show && t.aboveData && L(), at.render(), U();
    }
    function N(t, i) {
      for (var e, o, n, a, r = d(), l = 0; l < r.length; ++l) if (e = r[l], e.direction == i && (a = i + e.n + "axis", t[a] || 1 != e.n || (a = i + "axis"), t[a])) {
        o = t[a].from, n = t[a].to;
        break;
      }
      if (t[a] || (e = "x" == i ? ht[0] : ft[0], o = t[i + "1"], n = t[i + "2"]), null != o && null != n && o > n) {
        var s = o;
        o = n, n = s;
      }
      return {
        from: o,
        to: n,
        axis: e
      };
    }
    function D() {
      st.save(), st.translate(ut.left, ut.top), st.fillStyle = et(nt.grid.backgroundColor, pt, 0, "rgba(255, 255, 255, 0)"), st.fillRect(0, 0, dt, pt), st.restore();
    }
    function L() {
      var i, e, o, n;
      st.save(), st.translate(ut.left, ut.top);
      var a = nt.grid.markings;
      if (a) for (t.isFunction(a) && (e = xt.getAxes(), e.xmin = e.xaxis.min, e.xmax = e.xaxis.max, e.ymin = e.yaxis.min, e.ymax = e.yaxis.max, a = a(e)), i = 0; i < a.length; ++i) {
        var r = a[i],
          l = N(r, "x"),
          s = N(r, "y");
        if (null == l.from && (l.from = l.axis.min), null == l.to && (l.to = l.axis.max), null == s.from && (s.from = s.axis.min), null == s.to && (s.to = s.axis.max), !(l.to < l.axis.min || l.from > l.axis.max || s.to < s.axis.min || s.from > s.axis.max)) {
          l.from = Math.max(l.from, l.axis.min), l.to = Math.min(l.to, l.axis.max), s.from = Math.max(s.from, s.axis.min), s.to = Math.min(s.to, s.axis.max);
          var c = l.from === l.to,
            h = s.from === s.to;
          if (!c || !h) if (l.from = Math.floor(l.axis.p2c(l.from)), l.to = Math.floor(l.axis.p2c(l.to)), s.from = Math.floor(s.axis.p2c(s.from)), s.to = Math.floor(s.axis.p2c(s.to)), c || h) {
            var f = r.lineWidth || nt.grid.markingsLineWidth,
              u = f % 2 ? .5 : 0;
            st.beginPath(), st.strokeStyle = r.color || nt.grid.markingsColor, st.lineWidth = f, c ? (st.moveTo(l.to + u, s.from), st.lineTo(l.to + u, s.to)) : (st.moveTo(l.from, s.to + u), st.lineTo(l.to, s.to + u)), st.stroke();
          } else st.fillStyle = r.color || nt.grid.markingsColor, st.fillRect(l.from, s.to, l.to - l.from, s.from - s.to);
        }
      }
      e = d(), o = nt.grid.borderWidth;
      for (var p = 0; p < e.length; ++p) {
        var m,
          x,
          g,
          b,
          v = e[p],
          k = v.box,
          y = v.tickLength;
        if (v.show && 0 != v.ticks.length) {
          for (st.lineWidth = 1, "x" == v.direction ? (m = 0, x = "full" == y ? "top" == v.position ? 0 : pt : k.top - ut.top + ("top" == v.position ? k.height : 0)) : (x = 0, m = "full" == y ? "left" == v.position ? 0 : dt : k.left - ut.left + ("left" == v.position ? k.width : 0)), v.innermost || (st.strokeStyle = v.options.color, st.beginPath(), g = b = 0, "x" == v.direction ? g = dt + 1 : b = pt + 1, 1 == st.lineWidth && ("x" == v.direction ? x = Math.floor(x) + .5 : m = Math.floor(m) + .5), st.moveTo(m, x), st.lineTo(m + g, x + b), st.stroke()), st.strokeStyle = v.options.tickColor, st.beginPath(), i = 0; i < v.ticks.length; ++i) {
            var w = v.ticks[i].v;
            g = b = 0, isNaN(w) || w < v.min || w > v.max || "full" == y && ("object" == _typeof(o) && o[v.position] > 0 || o > 0) && (w == v.min || w == v.max) || ("x" == v.direction ? (m = v.p2c(w), b = "full" == y ? -pt : y, "top" == v.position && (b = -b)) : (x = v.p2c(w), g = "full" == y ? -dt : y, "left" == v.position && (g = -g)), 1 == st.lineWidth && ("x" == v.direction ? m = Math.floor(m) + .5 : x = Math.floor(x) + .5), st.moveTo(m, x), st.lineTo(m + g, x + b));
          }
          st.stroke();
        }
      }
      o && (n = nt.grid.borderColor, "object" == _typeof(o) || "object" == _typeof(n) ? ("object" != _typeof(o) && (o = {
        top: o,
        right: o,
        bottom: o,
        left: o
      }), "object" != _typeof(n) && (n = {
        top: n,
        right: n,
        bottom: n,
        left: n
      }), o.top > 0 && (st.strokeStyle = n.top, st.lineWidth = o.top, st.beginPath(), st.moveTo(0 - o.left, 0 - o.top / 2), st.lineTo(dt, 0 - o.top / 2), st.stroke()), o.right > 0 && (st.strokeStyle = n.right, st.lineWidth = o.right, st.beginPath(), st.moveTo(dt + o.right / 2, 0 - o.top), st.lineTo(dt + o.right / 2, pt), st.stroke()), o.bottom > 0 && (st.strokeStyle = n.bottom, st.lineWidth = o.bottom, st.beginPath(), st.moveTo(dt + o.right, pt + o.bottom / 2), st.lineTo(0, pt + o.bottom / 2), st.stroke()), o.left > 0 && (st.strokeStyle = n.left, st.lineWidth = o.left, st.beginPath(), st.moveTo(0 - o.left / 2, pt + o.bottom), st.lineTo(0 - o.left / 2, 0), st.stroke())) : (st.lineWidth = o, st.strokeStyle = nt.grid.borderColor, st.strokeRect(-o / 2, -o / 2, dt + o, pt + o))), st.restore();
    }
    function O() {
      t.each(d(), function (t, i) {
        var e,
          o,
          n,
          a,
          r,
          l = i.box,
          s = i.direction + "Axis " + i.direction + i.n + "Axis",
          c = "flot-" + i.direction + "-axis flot-" + i.direction + i.n + "-axis " + s,
          h = i.options.font || "flot-tick-label tickLabel";
        if (at.removeText(c), i.show && 0 != i.ticks.length) for (var f = 0; f < i.ticks.length; ++f) e = i.ticks[f], !e.label || e.v < i.min || e.v > i.max || ("x" == i.direction ? (a = "center", o = ut.left + i.p2c(e.v), "bottom" == i.position ? n = l.top + l.padding : (n = l.top + l.height - l.padding, r = "bottom")) : (r = "middle", n = ut.top + i.p2c(e.v), "left" == i.position ? (o = l.left + l.width - l.padding, a = "right") : o = l.left + l.padding), at.addText(c, o, n, e.label, h, null, null, a, r));
      });
    }
    function R(t) {
      t.lines.show && H(t), t.bars.show && B(t), t.points.show && j(t);
    }
    function H(t) {
      function i(t, i, e, o, n) {
        var a = t.points,
          r = t.pointsize,
          l = null,
          s = null;
        st.beginPath();
        for (var c = r; c < a.length; c += r) {
          var h = a[c - r],
            f = a[c - r + 1],
            u = a[c],
            d = a[c + 1];
          if (null != h && null != u) {
            if (f <= d && f < n.min) {
              if (d < n.min) continue;
              h = (n.min - f) / (d - f) * (u - h) + h, f = n.min;
            } else if (d <= f && d < n.min) {
              if (f < n.min) continue;
              u = (n.min - f) / (d - f) * (u - h) + h, d = n.min;
            }
            if (f >= d && f > n.max) {
              if (d > n.max) continue;
              h = (n.max - f) / (d - f) * (u - h) + h, f = n.max;
            } else if (d >= f && d > n.max) {
              if (f > n.max) continue;
              u = (n.max - f) / (d - f) * (u - h) + h, d = n.max;
            }
            if (h <= u && h < o.min) {
              if (u < o.min) continue;
              f = (o.min - h) / (u - h) * (d - f) + f, h = o.min;
            } else if (u <= h && u < o.min) {
              if (h < o.min) continue;
              d = (o.min - h) / (u - h) * (d - f) + f, u = o.min;
            }
            if (h >= u && h > o.max) {
              if (u > o.max) continue;
              f = (o.max - h) / (u - h) * (d - f) + f, h = o.max;
            } else if (u >= h && u > o.max) {
              if (h > o.max) continue;
              d = (o.max - h) / (u - h) * (d - f) + f, u = o.max;
            }
            h == l && f == s || st.moveTo(o.p2c(h) + i, n.p2c(f) + e), l = u, s = d, st.lineTo(o.p2c(u) + i, n.p2c(d) + e);
          }
        }
        st.stroke();
      }
      function e(t, i, e) {
        for (var o = t.points, n = t.pointsize, a = Math.min(Math.max(0, e.min), e.max), r = 0, l = !1, s = 1, c = 0, h = 0;;) {
          if (n > 0 && r > o.length + n) break;
          r += n;
          var f = o[r - n],
            u = o[r - n + s],
            d = o[r],
            p = o[r + s];
          if (l) {
            if (n > 0 && null != f && null == d) {
              h = r, n = -n, s = 2;
              continue;
            }
            if (n < 0 && r == c + n) {
              st.fill(), l = !1, n = -n, s = 1, r = c = h + n;
              continue;
            }
          }
          if (null != f && null != d) {
            if (f <= d && f < i.min) {
              if (d < i.min) continue;
              u = (i.min - f) / (d - f) * (p - u) + u, f = i.min;
            } else if (d <= f && d < i.min) {
              if (f < i.min) continue;
              p = (i.min - f) / (d - f) * (p - u) + u, d = i.min;
            }
            if (f >= d && f > i.max) {
              if (d > i.max) continue;
              u = (i.max - f) / (d - f) * (p - u) + u, f = i.max;
            } else if (d >= f && d > i.max) {
              if (f > i.max) continue;
              p = (i.max - f) / (d - f) * (p - u) + u, d = i.max;
            }
            if (l || (st.beginPath(), st.moveTo(i.p2c(f), e.p2c(a)), l = !0), u >= e.max && p >= e.max) st.lineTo(i.p2c(f), e.p2c(e.max)), st.lineTo(i.p2c(d), e.p2c(e.max));else if (u <= e.min && p <= e.min) st.lineTo(i.p2c(f), e.p2c(e.min)), st.lineTo(i.p2c(d), e.p2c(e.min));else {
              var m = f,
                x = d;
              u <= p && u < e.min && p >= e.min ? (f = (e.min - u) / (p - u) * (d - f) + f, u = e.min) : p <= u && p < e.min && u >= e.min && (d = (e.min - u) / (p - u) * (d - f) + f, p = e.min), u >= p && u > e.max && p <= e.max ? (f = (e.max - u) / (p - u) * (d - f) + f, u = e.max) : p >= u && p > e.max && u <= e.max && (d = (e.max - u) / (p - u) * (d - f) + f, p = e.max), f != m && st.lineTo(i.p2c(m), e.p2c(u)), st.lineTo(i.p2c(f), e.p2c(u)), st.lineTo(i.p2c(d), e.p2c(p)), d != x && (st.lineTo(i.p2c(d), e.p2c(p)), st.lineTo(i.p2c(x), e.p2c(p)));
            }
          }
        }
      }
      st.save(), st.translate(ut.left, ut.top), st.lineJoin = "round";
      var o = t.lines.lineWidth,
        n = t.shadowSize;
      if (o > 0 && n > 0) {
        st.lineWidth = n, st.strokeStyle = "rgba(0,0,0,0.1)";
        var a = Math.PI / 18;
        i(t.datapoints, Math.sin(a) * (o / 2 + n / 2), Math.cos(a) * (o / 2 + n / 2), t.xaxis, t.yaxis), st.lineWidth = n / 2, i(t.datapoints, Math.sin(a) * (o / 2 + n / 4), Math.cos(a) * (o / 2 + n / 4), t.xaxis, t.yaxis);
      }
      st.lineWidth = o, st.strokeStyle = t.color;
      var r = G(t.lines, t.color, 0, pt);
      r && (st.fillStyle = r, e(t.datapoints, t.xaxis, t.yaxis)), o > 0 && i(t.datapoints, 0, 0, t.xaxis, t.yaxis), st.restore();
    }
    function j(t) {
      function i(t, i, e, o, n, a, r, l) {
        for (var s = t.points, c = t.pointsize, h = 0; h < s.length; h += c) {
          var f = s[h],
            u = s[h + 1];
          null == f || f < a.min || f > a.max || u < r.min || u > r.max || (st.beginPath(), f = a.p2c(f), u = r.p2c(u) + o, "circle" == l ? st.arc(f, u, i, 0, n ? Math.PI : 2 * Math.PI, !1) : l(st, f, u, i, n), st.closePath(), e && (st.fillStyle = e, st.fill()), st.stroke());
        }
      }
      st.save(), st.translate(ut.left, ut.top);
      var e = t.points.lineWidth,
        o = t.shadowSize,
        n = t.points.radius,
        a = t.points.symbol;
      if (0 == e && (e = 1e-4), e > 0 && o > 0) {
        var r = o / 2;
        st.lineWidth = r, st.strokeStyle = "rgba(0,0,0,0.1)", i(t.datapoints, n, null, r + r / 2, !0, t.xaxis, t.yaxis, a), st.strokeStyle = "rgba(0,0,0,0.2)", i(t.datapoints, n, null, r / 2, !0, t.xaxis, t.yaxis, a);
      }
      st.lineWidth = e, st.strokeStyle = t.color, i(t.datapoints, n, G(t.points, t.color), 0, !1, t.xaxis, t.yaxis, a), st.restore();
    }
    function E(t, i, e, o, n, a, r, l, s, c, h) {
      var f, u, d, p, m, x, g, b, v;
      c ? (b = x = g = !0, m = !1, f = e, u = t, p = i + o, d = i + n, u < f && (v = u, u = f, f = v, m = !0, x = !1)) : (m = x = g = !0, b = !1, f = t + o, u = t + n, d = e, p = i, p < d && (v = p, p = d, d = v, b = !0, g = !1)), u < r.min || f > r.max || p < l.min || d > l.max || (f < r.min && (f = r.min, m = !1), u > r.max && (u = r.max, x = !1), d < l.min && (d = l.min, b = !1), p > l.max && (p = l.max, g = !1), f = r.p2c(f), d = l.p2c(d), u = r.p2c(u), p = l.p2c(p), a && (s.fillStyle = a(d, p), s.fillRect(f, p, u - f, d - p)), h > 0 && (m || x || g || b) && (s.beginPath(), s.moveTo(f, d), m ? s.lineTo(f, p) : s.moveTo(f, p), g ? s.lineTo(u, p) : s.moveTo(u, p), x ? s.lineTo(u, d) : s.moveTo(u, d), b ? s.lineTo(f, d) : s.moveTo(f, d), s.stroke()));
    }
    function B(t) {
      function i(i, e, o, n, a, r) {
        for (var l = i.points, s = i.pointsize, c = 0; c < l.length; c += s) null != l[c] && E(l[c], l[c + 1], l[c + 2], e, o, n, a, r, st, t.bars.horizontal, t.bars.lineWidth);
      }
      st.save(), st.translate(ut.left, ut.top), st.lineWidth = t.bars.lineWidth, st.strokeStyle = t.color;
      var e;
      switch (t.bars.align) {
        case "left":
          e = 0;
          break;
        case "right":
          e = -t.bars.barWidth;
          break;
        default:
          e = -t.bars.barWidth / 2;
      }
      var o = t.bars.fill ? function (i, e) {
        return G(t.bars, t.color, i, e);
      } : null;
      i(t.datapoints, e, e + t.bars.barWidth, o, t.xaxis, t.yaxis), st.restore();
    }
    function G(i, e, o, n) {
      var a = i.fill;
      if (!a) return null;
      if (i.fillColor) return et(i.fillColor, o, n, e);
      var r = t.color.parse(e);
      return r.a = "number" == typeof a ? a : .4, r.normalize(), r.toString();
    }
    function _() {
      if (null != nt.legend.container ? t(nt.legend.container).html("") : e.find(".legend").remove(), nt.legend.show) {
        for (var i, o, n = [], a = [], r = !1, l = nt.legend.labelFormatter, s = 0; s < ot.length; ++s) i = ot[s], i.label && (o = l ? l(i.label, i) : i.label, o && a.push({
          label: o,
          color: i.color
        }));
        if (nt.legend.sorted) if (t.isFunction(nt.legend.sorted)) a.sort(nt.legend.sorted);else if ("reverse" == nt.legend.sorted) a.reverse();else {
          var c = "descending" != nt.legend.sorted;
          a.sort(function (t, i) {
            return t.label == i.label ? 0 : t.label < i.label != c ? 1 : -1;
          });
        }
        for (var s = 0; s < a.length; ++s) {
          var h = a[s];
          s % nt.legend.noColumns == 0 && (r && n.push("</tr>"), n.push("<tr>"), r = !0), n.push('<td class="legendColorBox"><div style="border:1px solid ' + nt.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + h.color + ';overflow:hidden"></div></div></td><td class="legendLabel">' + h.label + "</td>");
        }
        if (r && n.push("</tr>"), 0 != n.length) {
          var f = '<table style="font-size:smaller;color:' + nt.grid.color + '">' + n.join("") + "</table>";
          if (null != nt.legend.container) t(nt.legend.container).html(f);else {
            var u = "",
              d = nt.legend.position,
              p = nt.legend.margin;
            null == p[0] && (p = [p, p]), "n" == d.charAt(0) ? u += "top:" + (p[1] + ut.top) + "px;" : "s" == d.charAt(0) && (u += "bottom:" + (p[1] + ut.bottom) + "px;"), "e" == d.charAt(1) ? u += "right:" + (p[0] + ut.right) + "px;" : "w" == d.charAt(1) && (u += "left:" + (p[0] + ut.left) + "px;");
            var m = t('<div class="legend">' + f.replace('style="', 'style="position:absolute;' + u + ";") + "</div>").appendTo(e);
            if (0 != nt.legend.backgroundOpacity) {
              var x = nt.legend.backgroundColor;
              null == x && (x = nt.grid.backgroundColor, x = x && "string" == typeof x ? t.color.parse(x) : t.color.extract(m, "background-color"), x.a = 1, x = x.toString());
              var g = m.children();
              t('<div style="position:absolute;width:' + g.width() + "px;height:" + g.height() + "px;" + u + "background-color:" + x + ';"> </div>').prependTo(m).css("opacity", nt.legend.backgroundOpacity);
            }
          }
        }
      }
    }
    function V(t, i, e) {
      var o,
        n,
        a,
        r = nt.grid.mouseActiveRadius,
        l = r * r + 1,
        s = null;
      for (o = ot.length - 1; o >= 0; --o) if (e(ot[o])) {
        var c = ot[o],
          h = c.xaxis,
          f = c.yaxis,
          u = c.datapoints.points,
          d = h.c2p(t),
          p = f.c2p(i),
          m = r / h.scale,
          x = r / f.scale;
        if (a = c.datapoints.pointsize, h.options.inverseTransform && (m = Number.MAX_VALUE), f.options.inverseTransform && (x = Number.MAX_VALUE), c.lines.show || c.points.show) for (n = 0; n < u.length; n += a) {
          var g = u[n],
            b = u[n + 1];
          if (null != g && !(g - d > m || g - d < -m || b - p > x || b - p < -x)) {
            var v = Math.abs(h.p2c(g) - t),
              k = Math.abs(f.p2c(b) - i),
              y = v * v + k * k;
            y < l && (l = y, s = [o, n / a]);
          }
        }
        if (c.bars.show && !s) {
          var w, M;
          switch (c.bars.align) {
            case "left":
              w = 0;
              break;
            case "right":
              w = -c.bars.barWidth;
              break;
            default:
              w = -c.bars.barWidth / 2;
          }
          for (M = w + c.bars.barWidth, n = 0; n < u.length; n += a) {
            var g = u[n],
              b = u[n + 1],
              T = u[n + 2];
            null != g && (ot[o].bars.horizontal ? d <= Math.max(T, g) && d >= Math.min(T, g) && p >= b + w && p <= b + M : d >= g + w && d <= g + M && p >= Math.min(T, b) && p <= Math.max(T, b)) && (s = [o, n / a]);
          }
        }
      }
      return s ? (o = s[0], n = s[1], a = ot[o].datapoints.pointsize, {
        datapoint: ot[o].datapoints.points.slice(n * a, (n + 1) * a),
        dataIndex: n,
        series: ot[o],
        seriesIndex: o
      }) : null;
    }
    function X(t) {
      nt.grid.hoverable && Q("plothover", t, function (t) {
        return 0 != t.hoverable;
      });
    }
    function Y(t) {
      nt.grid.hoverable && Q("plothover", t, function (t) {
        return !1;
      });
    }
    function q(t) {
      Q("plotclick", t, function (t) {
        return 0 != t.clickable;
      });
    }
    function Q(t, i, o) {
      var n = lt.offset(),
        a = i.pageX - n.left - ut.left,
        r = i.pageY - n.top - ut.top,
        l = p({
          left: a,
          top: r
        });
      l.pageX = i.pageX, l.pageY = i.pageY;
      var s = V(a, r, o);
      if (s && (s.pageX = parseInt(s.series.xaxis.p2c(s.datapoint[0]) + n.left + ut.left, 10), s.pageY = parseInt(s.series.yaxis.p2c(s.datapoint[1]) + n.top + ut.top, 10)), nt.grid.autoHighlight) {
        for (var c = 0; c < gt.length; ++c) {
          var h = gt[c];
          h.auto != t || s && h.series == s.series && h.point[0] == s.datapoint[0] && h.point[1] == s.datapoint[1] || K(h.series, h.point);
        }
        s && $(s.series, s.datapoint, t);
      }
      e.trigger(t, [l, s]);
    }
    function U() {
      var t = nt.interaction.redrawOverlayInterval;
      return t == -1 ? void J() : void (bt || (bt = setTimeout(J, t)));
    }
    function J() {
      bt = null, ct.save(), rt.clear(), ct.translate(ut.left, ut.top);
      var t, i;
      for (t = 0; t < gt.length; ++t) i = gt[t], i.series.bars.show ? it(i.series, i.point) : tt(i.series, i.point);
      ct.restore(), l(mt.drawOverlay, [ct]);
    }
    function $(t, i, e) {
      if ("number" == typeof t && (t = ot[t]), "number" == typeof i) {
        var o = t.datapoints.pointsize;
        i = t.datapoints.points.slice(o * i, o * (i + 1));
      }
      var n = Z(t, i);
      n == -1 ? (gt.push({
        series: t,
        point: i,
        auto: e
      }), U()) : e || (gt[n].auto = !1);
    }
    function K(t, i) {
      if (null == t && null == i) return gt = [], void U();
      if ("number" == typeof t && (t = ot[t]), "number" == typeof i) {
        var e = t.datapoints.pointsize;
        i = t.datapoints.points.slice(e * i, e * (i + 1));
      }
      var o = Z(t, i);
      o != -1 && (gt.splice(o, 1), U());
    }
    function Z(t, i) {
      for (var e = 0; e < gt.length; ++e) {
        var o = gt[e];
        if (o.series == t && o.point[0] == i[0] && o.point[1] == i[1]) return e;
      }
      return -1;
    }
    function tt(i, e) {
      var o = e[0],
        n = e[1],
        a = i.xaxis,
        r = i.yaxis,
        l = "string" == typeof i.highlightColor ? i.highlightColor : t.color.parse(i.color).scale("a", .5).toString();
      if (!(o < a.min || o > a.max || n < r.min || n > r.max)) {
        var s = i.points.radius + i.points.lineWidth / 2;
        ct.lineWidth = s, ct.strokeStyle = l;
        var c = 1.5 * s;
        o = a.p2c(o), n = r.p2c(n), ct.beginPath(), "circle" == i.points.symbol ? ct.arc(o, n, c, 0, 2 * Math.PI, !1) : i.points.symbol(ct, o, n, c, !1), ct.closePath(), ct.stroke();
      }
    }
    function it(i, e) {
      var o,
        n = "string" == typeof i.highlightColor ? i.highlightColor : t.color.parse(i.color).scale("a", .5).toString(),
        a = n;
      switch (i.bars.align) {
        case "left":
          o = 0;
          break;
        case "right":
          o = -i.bars.barWidth;
          break;
        default:
          o = -i.bars.barWidth / 2;
      }
      ct.lineWidth = i.bars.lineWidth, ct.strokeStyle = n, E(e[0], e[1], e[2] || 0, o, o + i.bars.barWidth, function () {
        return a;
      }, i.xaxis, i.yaxis, ct, i.bars.horizontal, i.bars.lineWidth);
    }
    function et(i, e, o, n) {
      if ("string" == typeof i) return i;
      for (var a = st.createLinearGradient(0, o, 0, e), r = 0, l = i.colors.length; r < l; ++r) {
        var s = i.colors[r];
        if ("string" != typeof s) {
          var c = t.color.parse(n);
          null != s.brightness && (c = c.scale("rgb", s.brightness)), null != s.opacity && (c.a *= s.opacity), s = c.toString();
        }
        a.addColorStop(r / (l - 1), s);
      }
      return a;
    }
    var ot = [],
      nt = {
        colors: ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"],
        legend: {
          show: !0,
          noColumns: 1,
          labelFormatter: null,
          labelBoxBorderColor: "#ccc",
          container: null,
          position: "ne",
          margin: 5,
          backgroundColor: null,
          backgroundOpacity: .85,
          sorted: null
        },
        xaxis: {
          show: null,
          position: "bottom",
          mode: null,
          font: null,
          color: null,
          tickColor: null,
          transform: null,
          inverseTransform: null,
          min: null,
          max: null,
          autoscaleMargin: null,
          ticks: null,
          tickFormatter: null,
          labelWidth: null,
          labelHeight: null,
          reserveSpace: null,
          tickLength: null,
          alignTicksWithAxis: null,
          tickDecimals: null,
          tickSize: null,
          minTickSize: null
        },
        yaxis: {
          autoscaleMargin: .02,
          position: "left"
        },
        xaxes: [],
        yaxes: [],
        series: {
          points: {
            show: !1,
            radius: 3,
            lineWidth: 2,
            fill: !0,
            fillColor: "#ffffff",
            symbol: "circle"
          },
          lines: {
            lineWidth: 2,
            fill: !1,
            fillColor: null,
            steps: !1
          },
          bars: {
            show: !1,
            lineWidth: 2,
            barWidth: 1,
            fill: !0,
            fillColor: null,
            align: "left",
            horizontal: !1,
            zero: !0
          },
          shadowSize: 3,
          highlightColor: null
        },
        grid: {
          show: !0,
          aboveData: !1,
          color: "#545454",
          backgroundColor: null,
          borderColor: null,
          tickColor: null,
          margin: 0,
          labelMargin: 5,
          axisMargin: 8,
          borderWidth: 2,
          minBorderMargin: null,
          markings: null,
          markingsColor: "#f4f4f4",
          markingsLineWidth: 2,
          clickable: !1,
          hoverable: !1,
          autoHighlight: !0,
          mouseActiveRadius: 10
        },
        interaction: {
          redrawOverlayInterval: 1e3 / 60
        },
        hooks: {}
      },
      at = null,
      rt = null,
      lt = null,
      st = null,
      ct = null,
      ht = [],
      ft = [],
      ut = {
        left: 0,
        right: 0,
        top: 0,
        bottom: 0
      },
      dt = 0,
      pt = 0,
      mt = {
        processOptions: [],
        processRawData: [],
        processDatapoints: [],
        processOffset: [],
        drawBackground: [],
        drawSeries: [],
        draw: [],
        bindEvents: [],
        drawOverlay: [],
        shutdown: []
      },
      xt = this;
    xt.setData = h, xt.setupGrid = W, xt.draw = P, xt.getPlaceholder = function () {
      return e;
    }, xt.getCanvas = function () {
      return at.element;
    }, xt.getPlotOffset = function () {
      return ut;
    }, xt.width = function () {
      return dt;
    }, xt.height = function () {
      return pt;
    }, xt.offset = function () {
      var t = lt.offset();
      return t.left += ut.left, t.top += ut.top, t;
    }, xt.getData = function () {
      return ot;
    }, xt.getAxes = function () {
      var i = {};
      return t.each(ht.concat(ft), function (t, e) {
        e && (i[e.direction + (1 != e.n ? e.n : "") + "axis"] = e);
      }), i;
    }, xt.getXAxes = function () {
      return ht;
    }, xt.getYAxes = function () {
      return ft;
    }, xt.c2p = p, xt.p2c = m, xt.getOptions = function () {
      return nt;
    }, xt.highlight = $, xt.unhighlight = K, xt.triggerRedrawOverlay = U, xt.pointOffset = function (t) {
      return {
        left: parseInt(ht[u(t, "x") - 1].p2c(+t.x) + ut.left, 10),
        top: parseInt(ft[u(t, "y") - 1].p2c(+t.y) + ut.top, 10)
      };
    }, xt.shutdown = y, xt.destroy = function () {
      y(), e.removeData("plot").empty(), ot = [], nt = null, at = null, rt = null, lt = null, st = null, ct = null, ht = [], ft = [], mt = null, gt = [], xt = null;
    }, xt.resize = function () {
      var t = e.width(),
        i = e.height();
      at.resize(t, i), rt.resize(t, i);
    }, xt.hooks = mt, s(), c(a), v(), h(n), W(), P(), k();
    var gt = [],
      bt = null;
  }
  function o(t, i) {
    return i * Math.floor(t / i);
  }
  var n = Object.prototype.hasOwnProperty;
  t.fn.detach || (t.fn.detach = function () {
    return this.each(function () {
      this.parentNode && this.parentNode.removeChild(this);
    });
  }), i.prototype.resize = function (t, i) {
    if (t <= 0 || i <= 0) throw new Error("Invalid dimensions for plot, width = " + t + ", height = " + i);
    var e = this.element,
      o = this.context,
      n = this.pixelRatio;
    this.width != t && (e.width = t * n, e.style.width = t + "px", this.width = t), this.height != i && (e.height = i * n, e.style.height = i + "px", this.height = i), o.restore(), o.save(), o.scale(n, n);
  }, i.prototype.clear = function () {
    this.context.clearRect(0, 0, this.width, this.height);
  }, i.prototype.render = function () {
    var t = this._textCache;
    for (var i in t) if (n.call(t, i)) {
      var e = this.getTextLayer(i),
        o = t[i];
      e.hide();
      for (var a in o) if (n.call(o, a)) {
        var r = o[a];
        for (var l in r) if (n.call(r, l)) {
          for (var s, c = r[l].positions, h = 0; s = c[h]; h++) s.active ? s.rendered || (e.append(s.element), s.rendered = !0) : (c.splice(h--, 1), s.rendered && s.element.detach());
          0 == c.length && delete r[l];
        }
      }
      e.show();
    }
  }, i.prototype.getTextLayer = function (i) {
    var e = this.text[i];
    return null == e && (null == this.textContainer && (this.textContainer = t("<div class='flot-text'></div>").css({
      position: "absolute",
      top: 0,
      left: 0,
      bottom: 0,
      right: 0,
      "font-size": "smaller",
      color: "#545454"
    }).insertAfter(this.element)), e = this.text[i] = t("<div></div>").addClass(i).css({
      position: "absolute",
      top: 0,
      left: 0,
      bottom: 0,
      right: 0
    }).appendTo(this.textContainer)), e;
  }, i.prototype.getTextInfo = function (i, e, o, n, a) {
    var r, l, s, c;
    if (e = "" + e, r = "object" == _typeof(o) ? o.style + " " + o.variant + " " + o.weight + " " + o.size + "px/" + o.lineHeight + "px " + o.family : o, l = this._textCache[i], null == l && (l = this._textCache[i] = {}), s = l[r], null == s && (s = l[r] = {}), c = s[e], null == c) {
      var h = t("<div></div>").html(e).css({
        position: "absolute",
        "max-width": a,
        top: -9999
      }).appendTo(this.getTextLayer(i));
      "object" == _typeof(o) ? h.css({
        font: r,
        color: o.color
      }) : "string" == typeof o && h.addClass(o), c = s[e] = {
        width: h.outerWidth(!0),
        height: h.outerHeight(!0),
        element: h,
        positions: []
      }, h.detach();
    }
    return c;
  }, i.prototype.addText = function (t, i, e, o, n, a, r, l, s) {
    var c = this.getTextInfo(t, o, n, a, r),
      h = c.positions;
    "center" == l ? i -= c.width / 2 : "right" == l && (i -= c.width), "middle" == s ? e -= c.height / 2 : "bottom" == s && (e -= c.height);
    for (var f, u = 0; f = h[u]; u++) if (f.x == i && f.y == e) return void (f.active = !0);
    f = {
      active: !0,
      rendered: !1,
      element: h.length ? c.element.clone() : c.element,
      x: i,
      y: e
    }, h.push(f), f.element.css({
      top: Math.round(e),
      left: Math.round(i),
      "text-align": l
    });
  }, i.prototype.removeText = function (t, i, e, o, a, r) {
    if (null == o) {
      var l = this._textCache[t];
      if (null != l) for (var s in l) if (n.call(l, s)) {
        var c = l[s];
        for (var h in c) if (n.call(c, h)) for (var f, u = c[h].positions, d = 0; f = u[d]; d++) f.active = !1;
      }
    } else for (var f, u = this.getTextInfo(t, o, a, r).positions, d = 0; f = u[d]; d++) f.x == i && f.y == e && (f.active = !1);
  }, t.plot = function (i, o, n) {
    var a = new e(t(i), o, n, t.plot.plugins);
    return a;
  }, t.plot.version = "0.8.3", t.plot.plugins = [], t.fn.plot = function (i, e) {
    return this.each(function () {
      t.plot(this, i, e);
    });
  };
}(jQuery);

!function (e) {
  function i(i) {
    function r(i, s, t) {
      y || (y = !0, b = i.getCanvas(), w = e(b).parent(), k = i.getOptions(), i.setData(a(i.getData())));
    }
    function a(i) {
      for (var s = 0, t = 0, r = 0, a = k.series.pie.combine.color, l = [], n = 0; n < i.length; ++n) {
        var o = i[n].data;
        e.isArray(o) && 1 == o.length && (o = o[0]), e.isArray(o) ? !isNaN(parseFloat(o[1])) && isFinite(o[1]) ? o[1] = +o[1] : o[1] = 0 : o = !isNaN(parseFloat(o)) && isFinite(o) ? [1, +o] : [1, 0], i[n].data = [o];
      }
      for (var n = 0; n < i.length; ++n) s += i[n].data[0][1];
      for (var n = 0; n < i.length; ++n) {
        var o = i[n].data[0][1];
        o / s <= k.series.pie.combine.threshold && (t += o, r++, a || (a = i[n].color));
      }
      for (var n = 0; n < i.length; ++n) {
        var o = i[n].data[0][1];
        (r < 2 || o / s > k.series.pie.combine.threshold) && l.push(e.extend(i[n], {
          data: [[1, o]],
          color: i[n].color,
          label: i[n].label,
          angle: o * Math.PI * 2 / s,
          percent: o / (s / 100)
        }));
      }
      return r > 1 && l.push({
        data: [[1, t]],
        color: a,
        label: k.series.pie.combine.label,
        angle: t * Math.PI * 2 / s,
        percent: t / (s / 100)
      }), l;
    }
    function l(i, r) {
      function a() {
        m.clearRect(0, 0, p, h), w.children().filter(".pieLabel, .pieLabelBackground").remove();
      }
      function l() {
        var e = k.series.pie.shadow.left,
          i = k.series.pie.shadow.top,
          s = 10,
          t = k.series.pie.shadow.alpha,
          r = k.series.pie.radius > 1 ? k.series.pie.radius : M * k.series.pie.radius;
        if (!(r >= p / 2 - e || r * k.series.pie.tilt >= h / 2 - i || r <= s)) {
          m.save(), m.translate(e, i), m.globalAlpha = t, m.fillStyle = "#000", m.translate(P, A), m.scale(1, k.series.pie.tilt);
          for (var a = 1; a <= s; a++) m.beginPath(), m.arc(0, 0, r, 0, 2 * Math.PI, !1), m.fill(), r -= a;
          m.restore();
        }
      }
      function o() {
        function i(e, i, s) {
          e <= 0 || isNaN(e) || (s ? m.fillStyle = i : (m.strokeStyle = i, m.lineJoin = "round"), m.beginPath(), Math.abs(e - 2 * Math.PI) > 1e-9 && m.moveTo(0, 0), m.arc(0, 0, r, a, a + e / 2, !1), m.arc(0, 0, r, a + e / 2, a + e, !1), m.closePath(), a += e, s ? m.fill() : m.stroke());
        }
        function s() {
          function i(i, s, t) {
            if (0 == i.data[0][1]) return !0;
            var a,
              l = k.legend.labelFormatter,
              n = k.series.pie.label.formatter;
            a = l ? l(i.label, i) : i.label, n && (a = n(a, i));
            var o = (s + i.angle + s) / 2,
              g = P + Math.round(Math.cos(o) * r),
              c = A + Math.round(Math.sin(o) * r) * k.series.pie.tilt,
              u = "<span class='pieLabel' id='pieLabel" + t + "' style='position:absolute;top:" + c + "px;left:" + g + "px;'>" + a + "</span>";
            w.append(u);
            var d = w.children("#pieLabel" + t),
              f = c - d.height() / 2,
              v = g - d.width() / 2;
            if (d.css("top", f), d.css("left", v), 0 - f > 0 || 0 - v > 0 || h - (f + d.height()) < 0 || p - (v + d.width()) < 0) return !1;
            if (0 != k.series.pie.label.background.opacity) {
              var b = k.series.pie.label.background.color;
              null == b && (b = i.color);
              var M = "top:" + f + "px;left:" + v + "px;";
              e("<div class='pieLabelBackground' style='position:absolute;width:" + d.width() + "px;height:" + d.height() + "px;" + M + "background-color:" + b + ";'></div>").css("opacity", k.series.pie.label.background.opacity).insertBefore(d);
            }
            return !0;
          }
          for (var s = t, r = k.series.pie.label.radius > 1 ? k.series.pie.label.radius : M * k.series.pie.label.radius, a = 0; a < c.length; ++a) {
            if (c[a].percent >= 100 * k.series.pie.label.threshold && !i(c[a], s, a)) return !1;
            s += c[a].angle;
          }
          return !0;
        }
        var t = Math.PI * k.series.pie.startAngle,
          r = k.series.pie.radius > 1 ? k.series.pie.radius : M * k.series.pie.radius;
        m.save(), m.translate(P, A), m.scale(1, k.series.pie.tilt), m.save();
        for (var a = t, l = 0; l < c.length; ++l) c[l].startAngle = a, i(c[l].angle, c[l].color, !0);
        if (m.restore(), k.series.pie.stroke.width > 0) {
          m.save(), m.lineWidth = k.series.pie.stroke.width, a = t;
          for (var l = 0; l < c.length; ++l) i(c[l].angle, k.series.pie.stroke.color, !1);
          m.restore();
        }
        return n(m), m.restore(), !k.series.pie.label.show || s();
      }
      if (w) {
        var p = i.getPlaceholder().width(),
          h = i.getPlaceholder().height(),
          g = w.children().filter(".legend").children().width() || 0;
        m = r, y = !1, M = Math.min(p, h / k.series.pie.tilt) / 2, A = h / 2 + k.series.pie.offset.top, P = p / 2, "auto" == k.series.pie.offset.left ? (k.legend.position.match("w") ? P += g / 2 : P -= g / 2, P < M ? P = M : P > p - M && (P = p - M)) : P += k.series.pie.offset.left;
        var c = i.getData(),
          u = 0;
        do u > 0 && (M *= t), u += 1, a(), k.series.pie.tilt <= .8 && l(); while (!o() && u < s);
        u >= s && (a(), w.prepend("<div class='error'>Could not draw pie with labels contained inside canvas</div>")), i.setSeries && i.insertLegend && (i.setSeries(c), i.insertLegend());
      }
    }
    function n(e) {
      if (k.series.pie.innerRadius > 0) {
        e.save();
        var i = k.series.pie.innerRadius > 1 ? k.series.pie.innerRadius : M * k.series.pie.innerRadius;
        e.globalCompositeOperation = "destination-out", e.beginPath(), e.fillStyle = k.series.pie.stroke.color, e.arc(0, 0, i, 0, 2 * Math.PI, !1), e.fill(), e.closePath(), e.restore(), e.save(), e.beginPath(), e.strokeStyle = k.series.pie.stroke.color, e.arc(0, 0, i, 0, 2 * Math.PI, !1), e.stroke(), e.closePath(), e.restore();
      }
    }
    function o(e, i) {
      for (var s = !1, t = -1, r = e.length, a = r - 1; ++t < r; a = t) (e[t][1] <= i[1] && i[1] < e[a][1] || e[a][1] <= i[1] && i[1] < e[t][1]) && i[0] < (e[a][0] - e[t][0]) * (i[1] - e[t][1]) / (e[a][1] - e[t][1]) + e[t][0] && (s = !s);
      return s;
    }
    function p(e, s) {
      for (var t, r, a = i.getData(), l = i.getOptions(), n = l.series.pie.radius > 1 ? l.series.pie.radius : M * l.series.pie.radius, p = 0; p < a.length; ++p) {
        var h = a[p];
        if (h.pie.show) {
          if (m.save(), m.beginPath(), m.moveTo(0, 0), m.arc(0, 0, n, h.startAngle, h.startAngle + h.angle / 2, !1), m.arc(0, 0, n, h.startAngle + h.angle / 2, h.startAngle + h.angle, !1), m.closePath(), t = e - P, r = s - A, m.isPointInPath) {
            if (m.isPointInPath(e - P, s - A)) return m.restore(), {
              datapoint: [h.percent, h.data],
              dataIndex: 0,
              series: h,
              seriesIndex: p
            };
          } else {
            var g = n * Math.cos(h.startAngle),
              c = n * Math.sin(h.startAngle),
              u = n * Math.cos(h.startAngle + h.angle / 4),
              d = n * Math.sin(h.startAngle + h.angle / 4),
              f = n * Math.cos(h.startAngle + h.angle / 2),
              v = n * Math.sin(h.startAngle + h.angle / 2),
              b = n * Math.cos(h.startAngle + h.angle / 1.5),
              w = n * Math.sin(h.startAngle + h.angle / 1.5),
              k = n * Math.cos(h.startAngle + h.angle),
              y = n * Math.sin(h.startAngle + h.angle),
              I = [[0, 0], [g, c], [u, d], [f, v], [b, w], [k, y]],
              x = [t, r];
            if (o(I, x)) return m.restore(), {
              datapoint: [h.percent, h.data],
              dataIndex: 0,
              series: h,
              seriesIndex: p
            };
          }
          m.restore();
        }
      }
      return null;
    }
    function h(e) {
      c("plothover", e);
    }
    function g(e) {
      c("plotclick", e);
    }
    function c(e, s) {
      var t = i.offset(),
        r = parseInt(s.pageX - t.left),
        a = parseInt(s.pageY - t.top),
        l = p(r, a);
      if (k.grid.autoHighlight) for (var n = 0; n < I.length; ++n) {
        var o = I[n];
        o.auto != e || l && o.series == l.series || d(o.series);
      }
      l && u(l.series, e);
      var h = {
        pageX: s.pageX,
        pageY: s.pageY
      };
      w.trigger(e, [h, l]);
    }
    function u(e, s) {
      var t = f(e);
      t == -1 ? (I.push({
        series: e,
        auto: s
      }), i.triggerRedrawOverlay()) : s || (I[t].auto = !1);
    }
    function d(e) {
      null == e && (I = [], i.triggerRedrawOverlay());
      var s = f(e);
      s != -1 && (I.splice(s, 1), i.triggerRedrawOverlay());
    }
    function f(e) {
      for (var i = 0; i < I.length; ++i) {
        var s = I[i];
        if (s.series == e) return i;
      }
      return -1;
    }
    function v(e, i) {
      function s(e) {
        e.angle <= 0 || isNaN(e.angle) || (i.fillStyle = "rgba(255, 255, 255, " + t.series.pie.highlight.opacity + ")", i.beginPath(), Math.abs(e.angle - 2 * Math.PI) > 1e-9 && i.moveTo(0, 0), i.arc(0, 0, r, e.startAngle, e.startAngle + e.angle / 2, !1), i.arc(0, 0, r, e.startAngle + e.angle / 2, e.startAngle + e.angle, !1), i.closePath(), i.fill());
      }
      var t = e.getOptions(),
        r = t.series.pie.radius > 1 ? t.series.pie.radius : M * t.series.pie.radius;
      i.save(), i.translate(P, A), i.scale(1, t.series.pie.tilt);
      for (var a = 0; a < I.length; ++a) s(I[a].series);
      n(i), i.restore();
    }
    var b = null,
      w = null,
      k = null,
      M = null,
      P = null,
      A = null,
      y = !1,
      m = null,
      I = [];
    i.hooks.processOptions.push(function (e, i) {
      i.series.pie.show && (i.grid.show = !1, "auto" == i.series.pie.label.show && (i.legend.show ? i.series.pie.label.show = !1 : i.series.pie.label.show = !0), "auto" == i.series.pie.radius && (i.series.pie.label.show ? i.series.pie.radius = .75 : i.series.pie.radius = 1), i.series.pie.tilt > 1 ? i.series.pie.tilt = 1 : i.series.pie.tilt < 0 && (i.series.pie.tilt = 0));
    }), i.hooks.bindEvents.push(function (e, i) {
      var s = e.getOptions();
      s.series.pie.show && (s.grid.hoverable && i.unbind("mousemove").mousemove(h), s.grid.clickable && i.unbind("click").click(g));
    }), i.hooks.processDatapoints.push(function (e, i, s, t) {
      var a = e.getOptions();
      a.series.pie.show && r(e);
    }), i.hooks.drawOverlay.push(function (e, i) {
      var s = e.getOptions();
      s.series.pie.show && v(e, i);
    }), i.hooks.draw.push(function (e, i) {
      var s = e.getOptions();
      s.series.pie.show && l(e, i);
    });
  }
  var s = 10,
    t = .95,
    r = {
      series: {
        pie: {
          show: !1,
          radius: "auto",
          innerRadius: 0,
          startAngle: 1.5,
          tilt: 1,
          shadow: {
            left: 5,
            top: 15,
            alpha: .02
          },
          offset: {
            top: 0,
            left: "auto"
          },
          stroke: {
            color: "#fff",
            width: 1
          },
          label: {
            show: "auto",
            formatter: function formatter(e, i) {
              return "<div style='font-size:x-small;text-align:center;padding:2px;color:" + i.color + ";'>" + e + "<br/>" + Math.round(i.percent) + "%</div>";
            },
            radius: 1,
            background: {
              color: null,
              opacity: 0
            },
            threshold: 0
          },
          combine: {
            threshold: -1,
            color: null,
            label: "Other"
          },
          highlight: {
            opacity: .5
          }
        }
      }
    };
  e.plot.plugins.push({
    init: i,
    options: r,
    name: "pie",
    version: "1.1"
  });
}(jQuery);

/**
 * Powermail functions
 *
 * @params {jQuery} $
 * @class PowermailBackend
 */
function PowermailBackend() {

  /**
   * Initialize
   *
   * @returns {void}
   */
  this.initialize = function () {
    addDetailOpenListener();
    addVisibilityChangeListener();
    addDeleteMailListener();
    addPageBrowseParamsListener();
    addSortingParamsListener();
    addSelectLineListener();
    addSelectAllLinesListener();
    addDeleteLinesListener();
    addToggleLinesVisibilityListener();
    addExtendedSearchListener();
    addExportListener();
    addConverterDetailsOpenListener();
    hidePasswords();
    reportingView();
  };

  /**
   * Add listener for opening details in listview
   *
   * @returns {void}
   * @private
   */
  var addDetailOpenListener = function addDetailOpenListener() {
    // $('*[data-action="powermailDetailsContainer"]').hide();
    $('*[data-action="openPowermailDetails"]').click(function () {
      var $this = $(this);
      $this.closest('tr').find('.icon:first').toggle();
      var $iconLast = $this.closest('tr').find('.openPowermailDetailsIcons .icon:last');
      if ($iconLast.is(':visible')) {
        $iconLast.css('display', 'none');
      } else {
        $iconLast.css('display', 'inline-block');
      }
      $this.closest('tr').next().toggleClass('powermail_listbe_details_closed').find('.powermail_listbe_details_container').slideToggle();
    });
  };

  /**
   * Hide/Unhide single mail
   *
   * @returns {void}
   * @private
   */
  var addVisibilityChangeListener = function addVisibilityChangeListener() {
    $(document).on('click', '.unhideMail, .hideMail', function () {
      var $this = $(this);
      var moduleUri = $this.closest('td').find('.container_module_uri').val();
      var uid = $this.closest('td').find('.container_uid').val();
      var table = $this.closest('td').find('.container_table').val();
      var hidden = visibilityToggleLine($this.closest('tr'));
      sendVisibilityRequest(table, uid, hidden, moduleUri);
    });
  };

  /**
   * Delete single mail
   *
   * @returns {void}
   * @private
   */
  var addDeleteMailListener = function addDeleteMailListener() {
    $(document).on('click', '*[data-action="deleteMail"]', function () {
      var $this = $(this);
      var moduleUri = $this.closest('td').find('.container_module_uri').val();
      var uid = $this.closest('td').find('.container_uid').val();
      var table = $this.closest('td').find('.container_table').val();
      var confirmationMessage = $this.closest('td').find('.container_label_delete_confirmation').val();
      if (confirm(confirmationMessage)) {
        removeLine($this.closest('tr'));
        sendDeleteRequest(table, uid, moduleUri);
      }
    });
  };

  /**
   * Pagebrowser: Add a hiddenfield with page variable to search form and submit whole form to keep filter variables
   * while pagebrowsing
   *
   * @returns {void}
   * @private
   */
  var addPageBrowseParamsListener = function addPageBrowseParamsListener() {
    var paginationItems = document.querySelectorAll('.powermail_list ._pagination a');
    paginationItems.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var hrefParts = event.target.getAttribute('href').split('&');
        var page = 0;
        for (var i = 0; i < hrefParts.length; i++) {
          if (hrefParts[i].indexOf('currentPage') !== -1) {
            page = parseInt(hrefParts[i].split('=')[1]);
          }
        }
        if (page > 0) {
          var form = document.querySelector('#powermail_module_search');
          var paginationHiddenField = document.createElement('input');
          paginationHiddenField.setAttribute('type', 'hidden');
          paginationHiddenField.setAttribute('name', 'currentPage');
          paginationHiddenField.setAttribute('value', page.toString());
          form.appendChild(paginationHiddenField);
          form.submit();
        }
      });
    });
  };

  /**
   * sorting (add hiddenfield with sorting variables to search form and submit)
   *
   * @returns {void}
   * @private
   */
  var addSortingParamsListener = function addSortingParamsListener() {
    $('a.sorting').click(function (event) {
      event.preventDefault();
      var href = $(this).prop('href');
      var hrefParts = href.split('&');
      var params = '';
      for (var i = 0; i < hrefParts.length; i++) {
        if (hrefParts[i].indexOf('sorting') !== -1) {
          params = hrefParts[i];
        }
      }
      if (params !== '') {
        var paramsParts = params.split('=');
        paramsParts[0] = paramsParts[0].replace('%40', '@');
        var sortingContainer = $('.extended_export_sorting_container[name="' + decodeURI(paramsParts[0]) + '"]');
        if (sortingContainer.length) {
          // remove already existing hidden fields
          sortingContainer.remove();
        }
        // add new hidden field
        var html = '<input type="hidden" name="' + paramsParts[0] + '" value="' + paramsParts[1] + '" />';
        var $filterForm = $('#powermail_module_search');
        $filterForm.append(decodeURI(html));
        $filterForm.submit();
      }
    });
  };

  /**
   * Select a line
   *
   * @returns {void}
   * @private
   */
  var addSelectLineListener = function addSelectLineListener() {
    $('.addPowermailSelection').click(function () {
      selectOrDeselectLine($(this));
      calculateAndWriteNumbersOfSelections();
    });
  };

  /**
   * De/select all lines
   *
   * @returns {void}
   * @private
   */
  var addSelectAllLinesListener = function addSelectAllLinesListener() {
    $('.addPowermailSelectionAll').click(function () {
      $('.addPowermailSelection').each(function () {
        selectOrDeselectLine($(this));
      });
      calculateAndWriteNumbersOfSelections();
    });
  };

  /**
   * Delete all selected lines
   *
   * @returns {void}
   * @private
   */
  var addDeleteLinesListener = function addDeleteLinesListener() {
    $('.powermailSelectionDelete').click(function () {
      deleteSelectedLines();
    });
  };

  /**
   * Change visibility of selected lines (hide/unhide)
   *
   * @returns {void}
   * @private
   */
  var addToggleLinesVisibilityListener = function addToggleLinesVisibilityListener() {
    $('.powermailSelectionHide').click(function () {
      toggleVisibilityOfLines($);
    });
  };

  /**
   * Show Extended Search from the Beginning
   *
   * @returns {void}
   * @private
   */
  var addExtendedSearchListener = function addExtendedSearchListener() {
    $('#extended_search input, #extended_search select').not('*[type="submit"]').each(function () {
      if ($(this).val() !== '') {
        $('#extended_search').addClass('in');
        return;
      }
    });
  };

  /**
   * Add export functions
   *
   * @returns {void}
   * @private
   */
  var addExportListener = function addExportListener() {
    // On export
    $('.export_icon_xls, .export_icon_csv').click(function () {
      if ($(this).hasClass('export_icon_xls_not_available')) {
        return Modal.confirm($(this).data('modal-title'), $(this).data('modal-text'), 2, [{
          text: $(this).data('modal-cancel'),
          btnClass: 'btn-secondary',
          name: 'abort',
          trigger: function trigger() {
            Modal.dismiss();
          }
        }]);
      }
      if ($(this).hasClass('export_icon_csv')) {
        $('#forwardToAction').val('exportCsv');
      }
      if ($(this).hasClass('export_icon_xls')) {
        $('#forwardToAction').val('exportXls');
      }
      $(this).closest('form').submit();
    });

    // Reset on submit
    $('*[data-action="searchall_submit"]').click(function () {
      $('#forwardToAction').val('list');
    });

    // Toogle Extended Export
    $('.extended_export_title').click(function () {
      var $this = $(this);
      if ($this.hasClass('powermail-close')) {
        $this.removeClass('powermail-close').addClass('powermail-open').children('span').removeClass('t3-icon-move-down').addClass('t3-icon-move-up');
        $this.next().slideDown('', function () {
          $this.next().children('div').children('div').fadeTo('slow', 1);
        });
      } else {
        $this.removeClass('powermail-open').addClass('powermail-close').children('span').removeClass('t3-icon-move-up').addClass('t3-icon-move-down');
        $this.next().children('div').children('div').fadeTo('slow', 0, function () {
          $this.next().slideUp();
        });
      }
    });

    // Multiselect
    $(function () {
      $('.extended_export_field, .extended_export_field_container').sortable({
        connectWith: '.connected',
        update: function update(event, ui) {
          var $id = $(this).prop('id');
          if ($id === 'export_field_selection') {
            var $fields = $(this).sortable('toArray').toString();
            $('#export_fields').val($fields);
          }
        }
      }).disableSelection();
    });
  };

  /**
   * Open details in converter view
   *
   * @returns {void}
   * @private
   */
  var addConverterDetailsOpenListener = function addConverterDetailsOpenListener() {
    $('.openHiddenTable').click(function () {
      var tr = $(this).closest('tr');
      tr.find('.dots').toggle();
      tr.find('.hiddenConverterTable').toggle();
    });
  };

  /**
   * Simply change value of password fields
   *
   * @returns {void}
   * @private
   */
  var hidePasswords = function hidePasswords() {
    $('.powermail_listbe_details_dd.powermail_listbe_details_type_password').html('********');
  };

  /**
   * Format reporting view with flot.js
   *
   * @returns {void}
   * @private
   */
  var reportingView = function reportingView() {
    var $table = $('.powermail_reporting_form_fields_table');
    $table.find('tr:even').addClass('even');
    $table.find('tr:first').removeClass('even');
    $table.find('tr').hide();
    $table.find('tr:first').show();
    $table.find('th').click(function () {
      var $this = $(this);
      if ($this.hasClass('powermail-close')) {
        $this.removeClass('powermail-close').addClass('powermail-open');
      } else {
        $this.removeClass('powermail-open').addClass('powermail-close');
      }
      $this.parent().siblings().slideToggle('fast');
    });

    // Flot.js
    $('*[data-flot-active="1"]').each(function () {
      var $this = $(this);
      var data = [];
      var values = split($this.data('flot-data-values'), ',');
      var labels = split($this.data('flot-data-labels'), ',');
      var colors = split($this.data('flot-data-colors'), ',');
      for (var i = 0; i < values.length; i++) {
        var dataPackage = {
          data: values[i],
          label: labels[i],
          color: colors[i]
        };
        data.push(dataPackage);
      }
      $.plot($this, data, {
        series: {
          pie: {
            show: true,
            innerRadius: 0.5,
            radius: 1,
            opacity: 0.3,
            color: '#FF0000',
            label: {
              show: true,
              radius: 1,
              formatter: labelFormatter,
              background: {
                opacity: 0.8
              }
            },
            combine: {
              color: '#999',
              threshold: 0.1
            }
          }
        },
        grid: {
          hoverable: true,
          clickable: true
        }
      });
      $this.bind("plothover", function (event, pos, obj) {
        if (!obj) {
          return;
        }
        var percent = parseFloat(obj.series.percent).toFixed(2);
        $("#hover").html("<span style='font-weight:bold; color:" + obj.series.color + "'>" + obj.series.label + " (" + percent + "%)</span>");
      });
      $this.bind("plotclick", function (event, pos, obj) {
        if (!obj) {
          return;
        }
        var percent = parseFloat(obj.series.percent).toFixed(2);
        alert("" + obj.series.label + ": " + percent + "%");
      });
    });
  };

  /**
   * ************ INTERNAL *************
   */

  /**
   * Set visibility of a line
   *
   * @param {jQuery} $tr
   * @returns {int} should be hidden?
   * @private
   */
  var visibilityToggleLine = function visibilityToggleLine($tr) {
    var $hideMailButton = $tr.find('.hideMail');
    var $unhideMailButton = $tr.find('.unhideMail');
    var hidden = 0;
    if ($hideMailButton.hasClass('hide')) {
      $hideMailButton.removeClass('hide');
      $unhideMailButton.addClass('hide');
      $tr.find('.powermailRecordIcon').children(':first').removeClass('hide');
      $tr.find('.powermailRecordIcon').children(':last').addClass('hide');
    } else {
      $hideMailButton.addClass('hide');
      $unhideMailButton.removeClass('hide');
      $tr.find('.powermailRecordIcon').children().last().removeClass('hide');
      $tr.find('.powermailRecordIcon').children().first().addClass('hide');
      hidden = 1;
    }
    return hidden;
  };

  /**
   * Send AJAX request to hide/unhide record
   *
   * @param {string} table
   * @param {string} uid
   * @param {int} hidden
   * @param {string} moduleUri
   * @returns {void}
   * @private
   */
  var sendVisibilityRequest = function sendVisibilityRequest(table, uid, hidden, moduleUri) {
    var url = moduleUri + '&data[' + table + '][' + uid + '][hidden]=' + hidden;
    $.ajax({
      url: url
    });
  };

  /**
   * Send AJAX request to delete record
   *
   * @param {string} table
   * @param {string} uid
   * @param {string} moduleUri
   * @returns {void}
   * @private
   */
  var sendDeleteRequest = function sendDeleteRequest(table, uid, moduleUri) {
    var url = moduleUri + '&cmd[' + table + '][' + uid + '][delete]=1';
    $.ajax({
      url: url
    });
  };

  /**
   * Remove a line
   *
   * @param {jQuery} $tr
   * @returns {void}
   * @private
   */
  var removeLine = function removeLine($tr) {
    $tr.fadeOut('slow', function () {
      $tr.next().remove();
      $tr.remove();
    });
  };

  /**
   * Select or deselect a line
   *
   * @param {jQuery} $icon
   * @returns {void}
   * @private
   */
  var selectOrDeselectLine = function selectOrDeselectLine($icon) {
    if ($icon.hasClass('fa')) {
      // TYPO3 7.x
      $icon.toggleClass('fa-plus').toggleClass('fa-minus').closest('tr').toggleClass('selectLine');
    } else {
      // TYPO3 6.2
      $icon.toggleClass('t3-icon-view-table-expand').toggleClass('t3-icon-view-table-collapse').closest('tr').toggleClass('selectLine');
    }
  };

  /**
   * Calculate number of selected lines and write
   *
   * @returns {void}
   * @private
   */
  var calculateAndWriteNumbersOfSelections = function calculateAndWriteNumbersOfSelections() {
    var number = $('.selectLine').length;
    $('.selectedLineMessage_numbers').html(number);
    if (number > 0) {
      $('.selectedLineMessage').show();
    } else {
      $('.selectedLineMessage').hide();
    }
  };

  /**
   * Delete all selected lines
   *
   * @returns {void}
   * @private
   */
  var deleteSelectedLines = function deleteSelectedLines() {
    $('.selectLine').each(function () {
      var $this = $(this);
      var $td = $this.children(':last');
      var moduleUri = $td.find('.container_module_uri').val();
      var uid = $td.find('.container_uid').val();
      var table = $td.find('.container_table').val();
      sendDeleteRequest(table, uid, moduleUri);
      removeLine($this);
      deselectLine($this);
    });
    calculateAndWriteNumbersOfSelections();
  };

  /**
   * Deselect this line
   *
   * @param {jQuery} $line
   * @returns {void}
   * @private
   */
  var deselectLine = function deselectLine($line) {
    var $icon = $line.find('.addPowermailSelection');
    selectOrDeselectLine($icon);
  };

  /**
   * Hide/Unhide all selected lines
   *
   * @returns {void}
   * @private
   */
  var toggleVisibilityOfLines = function toggleVisibilityOfLines() {
    $('.selectLine').each(function () {
      var $this = $(this);
      var $td = $this.children(':last');
      var moduleUri = $td.find('.container_module_uri').val();
      var uid = $td.find('.container_uid').val();
      var table = $td.find('.container_table').val();
      sendVisibilityRequest(table, uid, visibilityToggleLine($this), moduleUri);
      deselectLine($this);
    });
    calculateAndWriteNumbersOfSelections();
  };

  /**
   * split even if single value
   *
   * @param value
   * @param separator
   * @returns {Array}
   * @private
   */
  var split = function split(value, separator) {
    if (value.toString().indexOf(separator) !== -1) {
      var values = value.split(separator);
    } else {
      values = [value];
    }
    return values;
  };

  /**
   * Format a label for reporting view
   *
   * @param {string} label
   * @param {object} series
   * @returns {string}
   * @private
   */
  var labelFormatter = function labelFormatter(label, series) {
    return '<div class="flotLabel">' + label + '<br/>' + Math.round(series.percent) + '%</div>';
  };

  // make global
  window.PowermailBackend = PowermailBackend;
}
var powermailBackend = new PowermailBackend();
powermailBackend.initialize();
